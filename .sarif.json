{
    "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
    "version": "2.1.0",
    "runs": [
        {
            "tool": {
                "driver": {
                    "name": "Robocop",
                    "semanticVersion": "5.4.0",
                    "informationUri": "https://robocop.readthedocs.io/",
                    "rules": [
                        {
                            "id": "0201",
                            "name": "missing-doc-keyword",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#missing-doc-keyword",
                            "shortDescription": {
                                "text": "Missing documentation in '{{ name }}' keyword"
                            },
                            "fullDescription": {
                                "text": "\nKeyword documentation is displayed in a tooltip in most code editors,\nso it is recommended to write it for each keyword.\n\nYou can add documentation to keyword using following syntax::\n\n    *** Keywords ***\n    Keyword\n        [Documentation]  Keyword documentation\n        Keyword Step\n        Other Step\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\nKeyword documentation is displayed in a tooltip in most code editors,\nso it is recommended to write it for each keyword.\n\nYou can add documentation to keyword using following syntax::\n\n    *** Keywords ***\n    Keyword\n        [Documentation]  Keyword documentation\n        Keyword Step\n        Other Step\n",
                                "markdown": "\nKeyword documentation is displayed in a tooltip in most code editors,\nso it is recommended to write it for each keyword.\n\nYou can add documentation to keyword using following syntax::\n\n    *** Keywords ***\n    Keyword\n        [Documentation]  Keyword documentation\n        Keyword Step\n        Other Step\n"
                            }
                        },
                        {
                            "id": "0202",
                            "name": "missing-doc-test-case",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#missing-doc-test-case",
                            "shortDescription": {
                                "text": "Missing documentation in '{{ name }}' test case"
                            },
                            "fullDescription": {
                                "text": "\nYou can add documentation to test case using following syntax::\n\n    *** Test Cases ***\n    Test\n        [Documentation]  Test documentation\n        Keyword Step\n        Other Step\n\nThe rule by default ignores templated test cases but it can be configured with::\n\n    robocop --configure missing-doc-test-case:ignore_templated:False\n\nPossible values are: ``Yes`` / ``1`` / ``True`` (default) or ``No`` / ``False`` / ``0``.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\nYou can add documentation to test case using following syntax::\n\n    *** Test Cases ***\n    Test\n        [Documentation]  Test documentation\n        Keyword Step\n        Other Step\n\nThe rule by default ignores templated test cases but it can be configured with::\n\n    robocop --configure missing-doc-test-case:ignore_templated:False\n\nPossible values are: ``Yes`` / ``1`` / ``True`` (default) or ``No`` / ``False`` / ``0``.\n",
                                "markdown": "\nYou can add documentation to test case using following syntax::\n\n    *** Test Cases ***\n    Test\n        [Documentation]  Test documentation\n        Keyword Step\n        Other Step\n\nThe rule by default ignores templated test cases but it can be configured with::\n\n    robocop --configure missing-doc-test-case:ignore_templated:False\n\nPossible values are: ``Yes`` / ``1`` / ``True`` (default) or ``No`` / ``False`` / ``0``.\n"
                            }
                        },
                        {
                            "id": "0203",
                            "name": "missing-doc-suite",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#missing-doc-suite",
                            "shortDescription": {
                                "text": "Missing documentation in suite"
                            },
                            "fullDescription": {
                                "text": "\nYou can add documentation to suite using following syntax::\n\n    *** Settings ***\n    Documentation    Suite documentation\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\nYou can add documentation to suite using following syntax::\n\n    *** Settings ***\n    Documentation    Suite documentation\n",
                                "markdown": "\nYou can add documentation to suite using following syntax::\n\n    *** Settings ***\n    Documentation    Suite documentation\n"
                            }
                        },
                        {
                            "id": "0204",
                            "name": "missing-doc-resource-file",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#missing-doc-resource-file",
                            "shortDescription": {
                                "text": "Missing documentation in resource file"
                            },
                            "fullDescription": {
                                "text": "\nYou can add documentation to resource file using following syntax::\n\n    *** Settings ***\n    Documentation    Resource file documentation\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\nYou can add documentation to resource file using following syntax::\n\n    *** Settings ***\n    Documentation    Resource file documentation\n",
                                "markdown": "\nYou can add documentation to resource file using following syntax::\n\n    *** Settings ***\n    Documentation    Resource file documentation\n"
                            }
                        },
                        {
                            "id": "0301",
                            "name": "not-allowed-char-in-name",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#not-allowed-char-in-name",
                            "shortDescription": {
                                "text": "Not allowed character '{{ character }}' found in {{ block_name }} name"
                            },
                            "fullDescription": {
                                "text": "\nReports not allowed characters found in Test Case or Keyword names. By default it's a dot (``.``). You can\nconfigure what patterns are reported by calling::\n\n    robocop --configure not-allowed-char-in-name:pattern:regex_pattern\n\n``regex_pattern`` should define regex pattern not allowed in names. For example ``[@\\[]`` pattern\nwould report any occurrence of ``@[`` characters.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\nReports not allowed characters found in Test Case or Keyword names. By default it's a dot (``.``). You can\nconfigure what patterns are reported by calling::\n\n    robocop --configure not-allowed-char-in-name:pattern:regex_pattern\n\n``regex_pattern`` should define regex pattern not allowed in names. For example ``[@\\[]`` pattern\nwould report any occurrence of ``@[`` characters.\n",
                                "markdown": "\nReports not allowed characters found in Test Case or Keyword names. By default it's a dot (``.``). You can\nconfigure what patterns are reported by calling::\n\n    robocop --configure not-allowed-char-in-name:pattern:regex_pattern\n\n``regex_pattern`` should define regex pattern not allowed in names. For example ``[@\\[]`` pattern\nwould report any occurrence of ``@[`` characters.\n"
                            }
                        },
                        {
                            "id": "0302",
                            "name": "wrong-case-in-keyword-name",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#wrong-case-in-keyword-name",
                            "shortDescription": {
                                "text": "Keyword name '{{ keyword_name }}' does not follow case convention"
                            },
                            "fullDescription": {
                                "text": "\nKeyword names need to follow a specific case convention.\nThe convention can be set using ``convention`` parameter and accepts\none of the 2 values: ``each_word_capitalized`` or ``first_word_capitalized``.\n\nBy default, it's configured to ``each_word_capitalized``, which requires each keyword to follow such convention::\n\n    *** Keywords ***\n    Fill Out The Form\n        Provide Shipping Address\n        Provide Payment Method\n        Click 'Next' Button\n        [Teardown]  Log Form Data\n\nYou can also set it to ``first_word_capitalized`` which requires first word to have first letter capital::\n\n    *** Keywords ***\n    Fill out the form\n        Provide shipping address\n        Provide payment method\n        Click 'Next' button\n        [Teardown]  Log form data\n\nThe rule also accepts another parameter ``pattern`` which can be used to configure words\nthat are accepted in the keyword name, even though they violate the case convention.\n\n``pattern`` parameter accepts a regex pattern. For example, configuring it to ``robocop\\.readthedocs\\.io``\nwould make such keyword legal::\n\n    Go To robocop.readthedocs.io Page\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\nKeyword names need to follow a specific case convention.\nThe convention can be set using ``convention`` parameter and accepts\none of the 2 values: ``each_word_capitalized`` or ``first_word_capitalized``.\n\nBy default, it's configured to ``each_word_capitalized``, which requires each keyword to follow such convention::\n\n    *** Keywords ***\n    Fill Out The Form\n        Provide Shipping Address\n        Provide Payment Method\n        Click 'Next' Button\n        [Teardown]  Log Form Data\n\nYou can also set it to ``first_word_capitalized`` which requires first word to have first letter capital::\n\n    *** Keywords ***\n    Fill out the form\n        Provide shipping address\n        Provide payment method\n        Click 'Next' button\n        [Teardown]  Log form data\n\nThe rule also accepts another parameter ``pattern`` which can be used to configure words\nthat are accepted in the keyword name, even though they violate the case convention.\n\n``pattern`` parameter accepts a regex pattern. For example, configuring it to ``robocop\\.readthedocs\\.io``\nwould make such keyword legal::\n\n    Go To robocop.readthedocs.io Page\n",
                                "markdown": "\nKeyword names need to follow a specific case convention.\nThe convention can be set using ``convention`` parameter and accepts\none of the 2 values: ``each_word_capitalized`` or ``first_word_capitalized``.\n\nBy default, it's configured to ``each_word_capitalized``, which requires each keyword to follow such convention::\n\n    *** Keywords ***\n    Fill Out The Form\n        Provide Shipping Address\n        Provide Payment Method\n        Click 'Next' Button\n        [Teardown]  Log Form Data\n\nYou can also set it to ``first_word_capitalized`` which requires first word to have first letter capital::\n\n    *** Keywords ***\n    Fill out the form\n        Provide shipping address\n        Provide payment method\n        Click 'Next' button\n        [Teardown]  Log form data\n\nThe rule also accepts another parameter ``pattern`` which can be used to configure words\nthat are accepted in the keyword name, even though they violate the case convention.\n\n``pattern`` parameter accepts a regex pattern. For example, configuring it to ``robocop\\.readthedocs\\.io``\nwould make such keyword legal::\n\n    Go To robocop.readthedocs.io Page\n"
                            }
                        },
                        {
                            "id": "0303",
                            "name": "keyword-name-is-reserved-word",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#keyword-name-is-reserved-word",
                            "shortDescription": {
                                "text": "'{{ keyword_name }}' is a reserved keyword{{ error_msg }}"
                            },
                            "fullDescription": {
                                "text": "\nDo not use reserved names for keyword names. Following names are reserved:\n\n  - IF\n  - ELSE IF\n  - ELSE\n  - FOR\n  - END\n  - WHILE\n  - CONTINUE\n  - RETURN\n  - TRY\n  - EXCEPT\n  - FINALLY\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "\nDo not use reserved names for keyword names. Following names are reserved:\n\n  - IF\n  - ELSE IF\n  - ELSE\n  - FOR\n  - END\n  - WHILE\n  - CONTINUE\n  - RETURN\n  - TRY\n  - EXCEPT\n  - FINALLY\n",
                                "markdown": "\nDo not use reserved names for keyword names. Following names are reserved:\n\n  - IF\n  - ELSE IF\n  - ELSE\n  - FOR\n  - END\n  - WHILE\n  - CONTINUE\n  - RETURN\n  - TRY\n  - EXCEPT\n  - FINALLY\n"
                            }
                        },
                        {
                            "id": "0305",
                            "name": "underscore-in-keyword-name",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#underscore-in-keyword-name",
                            "shortDescription": {
                                "text": "Underscores in keyword name '{{ keyword_name }}' can be replaced with spaces"
                            },
                            "fullDescription": {
                                "text": "\nBad |:x:|\n\n..  code-block:: none\n\n    keyword_with_underscores\n\nGood |:white_check_mark:|\n\n..  code-block:: none\n\n    Keyword Without Underscores\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\nBad |:x:|\n\n..  code-block:: none\n\n    keyword_with_underscores\n\nGood |:white_check_mark:|\n\n..  code-block:: none\n\n    Keyword Without Underscores\n",
                                "markdown": "\nBad |:x:|\n\n..  code-block:: none\n\n    keyword_with_underscores\n\nGood |:white_check_mark:|\n\n..  code-block:: none\n\n    Keyword Without Underscores\n"
                            }
                        },
                        {
                            "id": "0306",
                            "name": "setting-name-not-in-title-case",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#setting-name-not-in-title-case",
                            "shortDescription": {
                                "text": "Setting name '{{ setting_name }}' should use title or upper case"
                            },
                            "fullDescription": {
                                "text": "\nGood |:white_check_mark:| ::\n\n    *** Settings ***\n    Resource    file.resource\n\n    *** Test Cases ***\n    Test\n        [DOCUMENTATION]  Some documentation\n        Step\n\nBad |:x:| ::\n\n    *** Settings ***\n    resource    file.resource\n\n    *** Test Cases ***\n    Test\n        [documentation]  Some documentation\n        Step\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\nGood |:white_check_mark:| ::\n\n    *** Settings ***\n    Resource    file.resource\n\n    *** Test Cases ***\n    Test\n        [DOCUMENTATION]  Some documentation\n        Step\n\nBad |:x:| ::\n\n    *** Settings ***\n    resource    file.resource\n\n    *** Test Cases ***\n    Test\n        [documentation]  Some documentation\n        Step\n",
                                "markdown": "\nGood |:white_check_mark:| ::\n\n    *** Settings ***\n    Resource    file.resource\n\n    *** Test Cases ***\n    Test\n        [DOCUMENTATION]  Some documentation\n        Step\n\nBad |:x:| ::\n\n    *** Settings ***\n    resource    file.resource\n\n    *** Test Cases ***\n    Test\n        [documentation]  Some documentation\n        Step\n"
                            }
                        },
                        {
                            "id": "0307",
                            "name": "section-name-invalid",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#section-name-invalid",
                            "shortDescription": {
                                "text": "Section name should be in format '{{ section_title_case }}' or '{{ section_upper_case }}'"
                            },
                            "fullDescription": {
                                "text": "\nGood |:white_check_mark:| ::\n\n    *** SETTINGS ***\n    *** Keywords ***\n\nBad |:x:| ::\n\n    *** keywords ***\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\nGood |:white_check_mark:| ::\n\n    *** SETTINGS ***\n    *** Keywords ***\n\nBad |:x:| ::\n\n    *** keywords ***\n\n",
                                "markdown": "\nGood |:white_check_mark:| ::\n\n    *** SETTINGS ***\n    *** Keywords ***\n\nBad |:x:| ::\n\n    *** keywords ***\n\n"
                            }
                        },
                        {
                            "id": "0308",
                            "name": "not-capitalized-test-case-title",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#not-capitalized-test-case-title",
                            "shortDescription": {
                                "text": "Test case '{{ test_name }}' title should start with capital letter"
                            },
                            "fullDescription": {
                                "text": "\nGood |:white_check_mark:| ::\n\n    *** Test Cases ***\n    Validate user details\n\nBad |:x:| ::\n\n    *** Test Cases ***\n    validate user details\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\nGood |:white_check_mark:| ::\n\n    *** Test Cases ***\n    Validate user details\n\nBad |:x:| ::\n\n    *** Test Cases ***\n    validate user details\n",
                                "markdown": "\nGood |:white_check_mark:| ::\n\n    *** Test Cases ***\n    Validate user details\n\nBad |:x:| ::\n\n    *** Test Cases ***\n    validate user details\n"
                            }
                        },
                        {
                            "id": "0309",
                            "name": "section-variable-not-uppercase",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#section-variable-not-uppercase",
                            "shortDescription": {
                                "text": "Section variable '{{ variable_name }}' name should be uppercase"
                            },
                            "fullDescription": {
                                "text": ""
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "",
                                "markdown": ""
                            }
                        },
                        {
                            "id": "0310",
                            "name": "non-local-variables-should-be-uppercase",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#non-local-variables-should-be-uppercase",
                            "shortDescription": {
                                "text": "Test, suite and global variables should be uppercase"
                            },
                            "fullDescription": {
                                "text": "\nGood |:white_check_mark:|\n\n..  code-block:: none\n\n    Set Task Variable    ${MY_VAR}           1\n    Set Suite Variable   ${MY VAR}           1\n    Set Test Variable    ${MY_VAR}           1\n    Set Global Variable  ${MY VAR${nested}}  1\n\nBad |:x:|\n\n..  code-block:: none\n\n    Set Task Variable    ${my_var}           1\n    Set Suite Variable   ${My Var}           1\n    Set Test Variable    ${myvar}            1\n    Set Global Variable  ${my_var${NESTED}}  1\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\nGood |:white_check_mark:|\n\n..  code-block:: none\n\n    Set Task Variable    ${MY_VAR}           1\n    Set Suite Variable   ${MY VAR}           1\n    Set Test Variable    ${MY_VAR}           1\n    Set Global Variable  ${MY VAR${nested}}  1\n\nBad |:x:|\n\n..  code-block:: none\n\n    Set Task Variable    ${my_var}           1\n    Set Suite Variable   ${My Var}           1\n    Set Test Variable    ${myvar}            1\n    Set Global Variable  ${my_var${NESTED}}  1\n",
                                "markdown": "\nGood |:white_check_mark:|\n\n..  code-block:: none\n\n    Set Task Variable    ${MY_VAR}           1\n    Set Suite Variable   ${MY VAR}           1\n    Set Test Variable    ${MY_VAR}           1\n    Set Global Variable  ${MY VAR${nested}}  1\n\nBad |:x:|\n\n..  code-block:: none\n\n    Set Task Variable    ${my_var}           1\n    Set Suite Variable   ${My Var}           1\n    Set Test Variable    ${myvar}            1\n    Set Global Variable  ${my_var${NESTED}}  1\n"
                            }
                        },
                        {
                            "id": "0311",
                            "name": "else-not-upper-case",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#else-not-upper-case",
                            "shortDescription": {
                                "text": "ELSE and ELSE IF should be upper case"
                            },
                            "fullDescription": {
                                "text": "\nGood |:white_check_mark:| ::\n\n    *** Keywords ***\n    Describe Temperature\n        [Arguments]     ${degrees}\n        IF         ${degrees} > ${30}\n            RETURN  Hot\n        ELSE IF    ${degrees} > ${15}\n            RETURN  Warm\n        ELSE\n            RETURN  Cold\n\nBad |:x:| ::\n\n    *** Keywords ***\n    Describe Temperature\n        [Arguments]     ${degrees}\n        If         ${degrees} > ${30}\n            RETURN  Hot\n        else if    ${degrees} > ${15}\n            RETURN  Warm\n        Else\n            RETURN  Cold\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "\nGood |:white_check_mark:| ::\n\n    *** Keywords ***\n    Describe Temperature\n        [Arguments]     ${degrees}\n        IF         ${degrees} > ${30}\n            RETURN  Hot\n        ELSE IF    ${degrees} > ${15}\n            RETURN  Warm\n        ELSE\n            RETURN  Cold\n\nBad |:x:| ::\n\n    *** Keywords ***\n    Describe Temperature\n        [Arguments]     ${degrees}\n        If         ${degrees} > ${30}\n            RETURN  Hot\n        else if    ${degrees} > ${15}\n            RETURN  Warm\n        Else\n            RETURN  Cold\n",
                                "markdown": "\nGood |:white_check_mark:| ::\n\n    *** Keywords ***\n    Describe Temperature\n        [Arguments]     ${degrees}\n        IF         ${degrees} > ${30}\n            RETURN  Hot\n        ELSE IF    ${degrees} > ${15}\n            RETURN  Warm\n        ELSE\n            RETURN  Cold\n\nBad |:x:| ::\n\n    *** Keywords ***\n    Describe Temperature\n        [Arguments]     ${degrees}\n        If         ${degrees} > ${30}\n            RETURN  Hot\n        else if    ${degrees} > ${15}\n            RETURN  Warm\n        Else\n            RETURN  Cold\n"
                            }
                        },
                        {
                            "id": "0312",
                            "name": "keyword-name-is-empty",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#keyword-name-is-empty",
                            "shortDescription": {
                                "text": "Keyword name should not be empty"
                            },
                            "fullDescription": {
                                "text": "\nRemember to always add a keyword name and avoid such code::\n\n    *** Keywords ***\n    # no keyword name here!!!\n        Log To Console  hi\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "\nRemember to always add a keyword name and avoid such code::\n\n    *** Keywords ***\n    # no keyword name here!!!\n        Log To Console  hi\n",
                                "markdown": "\nRemember to always add a keyword name and avoid such code::\n\n    *** Keywords ***\n    # no keyword name here!!!\n        Log To Console  hi\n"
                            }
                        },
                        {
                            "id": "0313",
                            "name": "test-case-name-is-empty",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#test-case-name-is-empty",
                            "shortDescription": {
                                "text": "Test case name should not be empty"
                            },
                            "fullDescription": {
                                "text": "\nRemember to always add a test case name and avoid such code::\n\n    *** Test Cases ***\n    # no test case name here!!!\n        Log To Console  hello\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "\nRemember to always add a test case name and avoid such code::\n\n    *** Test Cases ***\n    # no test case name here!!!\n        Log To Console  hello\n",
                                "markdown": "\nRemember to always add a test case name and avoid such code::\n\n    *** Test Cases ***\n    # no test case name here!!!\n        Log To Console  hello\n"
                            }
                        },
                        {
                            "id": "0314",
                            "name": "empty-library-alias",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#empty-library-alias",
                            "shortDescription": {
                                "text": "Library alias should not be empty"
                            },
                            "fullDescription": {
                                "text": "\nUse non-empty name when using library import with alias.\n\nGood |:white_check_mark:| ::\n\n    *** Settings ***\n    Library  CustomLibrary  AS  AnotherName\n\nBad |:x:| ::\n\n     *** Settings ***\n     Library  CustomLibrary  AS\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "\nUse non-empty name when using library import with alias.\n\nGood |:white_check_mark:| ::\n\n    *** Settings ***\n    Library  CustomLibrary  AS  AnotherName\n\nBad |:x:| ::\n\n     *** Settings ***\n     Library  CustomLibrary  AS\n",
                                "markdown": "\nUse non-empty name when using library import with alias.\n\nGood |:white_check_mark:| ::\n\n    *** Settings ***\n    Library  CustomLibrary  AS  AnotherName\n\nBad |:x:| ::\n\n     *** Settings ***\n     Library  CustomLibrary  AS\n"
                            }
                        },
                        {
                            "id": "0315",
                            "name": "duplicated-library-alias",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#duplicated-library-alias",
                            "shortDescription": {
                                "text": "Library alias should not be the same as original name"
                            },
                            "fullDescription": {
                                "text": "\nExamples of rule violation::\n\n     *** Settings ***\n     Library  CustomLibrary  AS  CustomLibrary   # same as library name\n     Library  CustomLibrary  AS  Custom Library  # same as library name (spaces are ignored)\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\nExamples of rule violation::\n\n     *** Settings ***\n     Library  CustomLibrary  AS  CustomLibrary   # same as library name\n     Library  CustomLibrary  AS  Custom Library  # same as library name (spaces are ignored)\n",
                                "markdown": "\nExamples of rule violation::\n\n     *** Settings ***\n     Library  CustomLibrary  AS  CustomLibrary   # same as library name\n     Library  CustomLibrary  AS  Custom Library  # same as library name (spaces are ignored)\n"
                            }
                        },
                        {
                            "id": "0316",
                            "name": "possible-variable-overwriting",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#possible-variable-overwriting",
                            "shortDescription": {
                                "text": "Variable '{{ variable_name }}' may overwrite similar variable inside '{{ block_name }}' {{ block_type }}. Note that variables are case-insensitive, and also spaces and underscores are ignored."
                            },
                            "fullDescription": {
                                "text": "\nFollowing assignments overwrite the same variable::\n\n    *** Keywords ***\n    Retrieve Usernames\n        ${username}      Get Username       id=1\n        ${User Name}     Get Username       id=2\n        ${user_name}     Get Username       id=3\n\nUse consistent variable naming guidelines to avoid unintended variable overwriting.\nRemember that variable names in Robot Framework are case-insensitive and\nunderscores and whitespaces are ignored.\n"
                            },
                            "defaultConfiguration": {
                                "level": "note"
                            },
                            "help": {
                                "text": "\nFollowing assignments overwrite the same variable::\n\n    *** Keywords ***\n    Retrieve Usernames\n        ${username}      Get Username       id=1\n        ${User Name}     Get Username       id=2\n        ${user_name}     Get Username       id=3\n\nUse consistent variable naming guidelines to avoid unintended variable overwriting.\nRemember that variable names in Robot Framework are case-insensitive and\nunderscores and whitespaces are ignored.\n",
                                "markdown": "\nFollowing assignments overwrite the same variable::\n\n    *** Keywords ***\n    Retrieve Usernames\n        ${username}      Get Username       id=1\n        ${User Name}     Get Username       id=2\n        ${user_name}     Get Username       id=3\n\nUse consistent variable naming guidelines to avoid unintended variable overwriting.\nRemember that variable names in Robot Framework are case-insensitive and\nunderscores and whitespaces are ignored.\n"
                            }
                        },
                        {
                            "id": "0317",
                            "name": "hyphen-in-variable-name",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#hyphen-in-variable-name",
                            "shortDescription": {
                                "text": "Use underscore in variable name '{{ variable_name }}' instead of hyphens to avoid treating them like minus sign"
                            },
                            "fullDescription": {
                                "text": "\nRobot Framework supports evaluation of Python code inside ${ } brackets. For example:\n\n..  code-block: none\n\n    ${var2}  Set Variable  ${${var}-${var2}}\n\nThat's why there is a possibility that hyphen in name is not recognized as part of the name but as a minus sign.\nBetter to use underscore instead:\n\n..  code-block: none\n\n    ${var2}  Set Variable  ${${var}_${var2}}\n"
                            },
                            "defaultConfiguration": {
                                "level": "note"
                            },
                            "help": {
                                "text": "\nRobot Framework supports evaluation of Python code inside ${ } brackets. For example:\n\n..  code-block: none\n\n    ${var2}  Set Variable  ${${var}-${var2}}\n\nThat's why there is a possibility that hyphen in name is not recognized as part of the name but as a minus sign.\nBetter to use underscore instead:\n\n..  code-block: none\n\n    ${var2}  Set Variable  ${${var}_${var2}}\n",
                                "markdown": "\nRobot Framework supports evaluation of Python code inside ${ } brackets. For example:\n\n..  code-block: none\n\n    ${var2}  Set Variable  ${${var}-${var2}}\n\nThat's why there is a possibility that hyphen in name is not recognized as part of the name but as a minus sign.\nBetter to use underscore instead:\n\n..  code-block: none\n\n    ${var2}  Set Variable  ${${var}_${var2}}\n"
                            }
                        },
                        {
                            "id": "0318",
                            "name": "bdd-without-keyword-call",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#bdd-without-keyword-call",
                            "shortDescription": {
                                "text": "BDD reserved keyword '{{ keyword_name }}' not followed by any keyword{{ error_msg }}"
                            },
                            "fullDescription": {
                                "text": "\nWhen using BDD reserved keywords (such as `GIVEN`, `WHEN`, `AND`, `BUT` or `THEN`) use them together with\nname of the keyword to run.\n\nGood |:white_check_mark:| ::\n\n    Given Setup Is Complete\n    When User Log In\n    Then User Should See Welcome Page\n\nBad |:x:| ::\n\n    Given\n    When User Log In\n    Then User Should See Welcome Page\n\nSince those words are used for BDD style, it's also recommended not to use them within the user keyword name.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\nWhen using BDD reserved keywords (such as `GIVEN`, `WHEN`, `AND`, `BUT` or `THEN`) use them together with\nname of the keyword to run.\n\nGood |:white_check_mark:| ::\n\n    Given Setup Is Complete\n    When User Log In\n    Then User Should See Welcome Page\n\nBad |:x:| ::\n\n    Given\n    When User Log In\n    Then User Should See Welcome Page\n\nSince those words are used for BDD style, it's also recommended not to use them within the user keyword name.\n",
                                "markdown": "\nWhen using BDD reserved keywords (such as `GIVEN`, `WHEN`, `AND`, `BUT` or `THEN`) use them together with\nname of the keyword to run.\n\nGood |:white_check_mark:| ::\n\n    Given Setup Is Complete\n    When User Log In\n    Then User Should See Welcome Page\n\nBad |:x:| ::\n\n    Given\n    When User Log In\n    Then User Should See Welcome Page\n\nSince those words are used for BDD style, it's also recommended not to use them within the user keyword name.\n"
                            }
                        },
                        {
                            "id": "0319",
                            "name": "deprecated-statement",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#deprecated-statement",
                            "shortDescription": {
                                "text": "'{{ statement_name }}' is deprecated since Robot Framework version {{ version }}, use '{{ alternative }}' instead"
                            },
                            "fullDescription": {
                                "text": "\nThis rule detects any piece of code that is marked as deprecated but still works in RF.\n\nFor example, ``Run Keyword`` and ``Continue For Loop`` keywords or ``[Return]`` setting.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\nThis rule detects any piece of code that is marked as deprecated but still works in RF.\n\nFor example, ``Run Keyword`` and ``Continue For Loop`` keywords or ``[Return]`` setting.\n",
                                "markdown": "\nThis rule detects any piece of code that is marked as deprecated but still works in RF.\n\nFor example, ``Run Keyword`` and ``Continue For Loop`` keywords or ``[Return]`` setting.\n"
                            }
                        },
                        {
                            "id": "0320",
                            "name": "not-allowed-char-in-filename",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#not-allowed-char-in-filename",
                            "shortDescription": {
                                "text": "Not allowed character '{{ character }}' found in {{ block_name }} name"
                            },
                            "fullDescription": {
                                "text": "\nReports not allowed pattern found in Suite names. By default, it's a dot (`.`).\nYou can configure what characters are reported by running::\n\n     robocop --configure not-allowed-char-in-filename:pattern:regex_pattern .\n\nwhere ``regex_pattern`` should define regex pattern for characters not allowed in names. For example `[@\\[]`\npattern would report any occurrence of ``@[`` characters.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\nReports not allowed pattern found in Suite names. By default, it's a dot (`.`).\nYou can configure what characters are reported by running::\n\n     robocop --configure not-allowed-char-in-filename:pattern:regex_pattern .\n\nwhere ``regex_pattern`` should define regex pattern for characters not allowed in names. For example `[@\\[]`\npattern would report any occurrence of ``@[`` characters.\n",
                                "markdown": "\nReports not allowed pattern found in Suite names. By default, it's a dot (`.`).\nYou can configure what characters are reported by running::\n\n     robocop --configure not-allowed-char-in-filename:pattern:regex_pattern .\n\nwhere ``regex_pattern`` should define regex pattern for characters not allowed in names. For example `[@\\[]`\npattern would report any occurrence of ``@[`` characters.\n"
                            }
                        },
                        {
                            "id": "0321",
                            "name": "deprecated-with-name",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#deprecated-with-name",
                            "shortDescription": {
                                "text": "'WITH NAME' alias marker is deprecated since Robot Framework 6.0 version and will be removed in the future release. Use 'AS' instead"
                            },
                            "fullDescription": {
                                "text": "\n``WITH NAME`` marker that is used when giving an alias to an imported library is going to be renamed to ``AS``.\nThe motivation is to be consistent with Python that uses ``as`` for similar purpose.\n\nCode with the deprecated marker::\n\n    *** Settings ***\n    Library    Collections    WITH NAME    AliasedName\n\nCode with the supported marker::\n\n    *** Settings ***\n    Library    Collections    AS    AliasedName\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\n``WITH NAME`` marker that is used when giving an alias to an imported library is going to be renamed to ``AS``.\nThe motivation is to be consistent with Python that uses ``as`` for similar purpose.\n\nCode with the deprecated marker::\n\n    *** Settings ***\n    Library    Collections    WITH NAME    AliasedName\n\nCode with the supported marker::\n\n    *** Settings ***\n    Library    Collections    AS    AliasedName\n",
                                "markdown": "\n``WITH NAME`` marker that is used when giving an alias to an imported library is going to be renamed to ``AS``.\nThe motivation is to be consistent with Python that uses ``as`` for similar purpose.\n\nCode with the deprecated marker::\n\n    *** Settings ***\n    Library    Collections    WITH NAME    AliasedName\n\nCode with the supported marker::\n\n    *** Settings ***\n    Library    Collections    AS    AliasedName\n"
                            }
                        },
                        {
                            "id": "0322",
                            "name": "deprecated-singular-header",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#deprecated-singular-header",
                            "shortDescription": {
                                "text": "'{{ singular_header }}' singular header form is deprecated since RF 6.0 and will be removed in the future releases. Use '{{ plural_header }}' instead"
                            },
                            "fullDescription": {
                                "text": "\nRobot Framework 6.0 starts deprecation period for singular headers forms. The rationale behind this change\nis available at https://github.com/robotframework/robotframework/issues/4431\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\nRobot Framework 6.0 starts deprecation period for singular headers forms. The rationale behind this change\nis available at https://github.com/robotframework/robotframework/issues/4431\n",
                                "markdown": "\nRobot Framework 6.0 starts deprecation period for singular headers forms. The rationale behind this change\nis available at https://github.com/robotframework/robotframework/issues/4431\n"
                            }
                        },
                        {
                            "id": "0323",
                            "name": "inconsistent-variable-name",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#inconsistent-variable-name",
                            "shortDescription": {
                                "text": "Variable '{{ name }}' has inconsistent naming. First used as '{{ first_use }}'"
                            },
                            "fullDescription": {
                                "text": "\nVariable names are case-insensitive and ignore underscores and spaces. It is possible to \nwrite the variable in multiple ways and it will be a valid Robot Framework code. However,\nit makes it harder to maintain the code that does not follow the consistent naming.\n\nExample::\n\n    *** Keywords ***\n    Check If User Is Admin\n        [Arguments]    ${username}\n        ${role}    Get User Role     ${username}\n        IF    '${ROLE}' == 'Admin'   # inconsistent name with ${role}\n            Log    ${Username} is an admin  # inconsistent name with ${username}\n        ELSE\n            Log    ${user name} is not an admin  # inconsistent name\n        END\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\nVariable names are case-insensitive and ignore underscores and spaces. It is possible to \nwrite the variable in multiple ways and it will be a valid Robot Framework code. However,\nit makes it harder to maintain the code that does not follow the consistent naming.\n\nExample::\n\n    *** Keywords ***\n    Check If User Is Admin\n        [Arguments]    ${username}\n        ${role}    Get User Role     ${username}\n        IF    '${ROLE}' == 'Admin'   # inconsistent name with ${role}\n            Log    ${Username} is an admin  # inconsistent name with ${username}\n        ELSE\n            Log    ${user name} is not an admin  # inconsistent name\n        END\n",
                                "markdown": "\nVariable names are case-insensitive and ignore underscores and spaces. It is possible to \nwrite the variable in multiple ways and it will be a valid Robot Framework code. However,\nit makes it harder to maintain the code that does not follow the consistent naming.\n\nExample::\n\n    *** Keywords ***\n    Check If User Is Admin\n        [Arguments]    ${username}\n        ${role}    Get User Role     ${username}\n        IF    '${ROLE}' == 'Admin'   # inconsistent name with ${role}\n            Log    ${Username} is an admin  # inconsistent name with ${username}\n        ELSE\n            Log    ${user name} is not an admin  # inconsistent name\n        END\n"
                            }
                        },
                        {
                            "id": "0324",
                            "name": "overwriting-reserved-variable",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#overwriting-reserved-variable",
                            "shortDescription": {
                                "text": "{{ var_or_arg }} '{{ variable_name }}' overwrites reserved variable '{{ reserved_variable }}'"
                            },
                            "fullDescription": {
                                "text": "\nOverwriting reserved variables may bring unexpected results.\nFor example, overwriting variable with name ``${LOG_LEVEL}`` can break Robot Framework logging.\nSee the full list of reserved variables at\n`Robot Framework User Guide <https://robotframework.org/robotframework/latest/RobotFrameworkUserGuide.html#automatic-variables>`_\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\nOverwriting reserved variables may bring unexpected results.\nFor example, overwriting variable with name ``${LOG_LEVEL}`` can break Robot Framework logging.\nSee the full list of reserved variables at\n`Robot Framework User Guide <https://robotframework.org/robotframework/latest/RobotFrameworkUserGuide.html#automatic-variables>`_\n",
                                "markdown": "\nOverwriting reserved variables may bring unexpected results.\nFor example, overwriting variable with name ``${LOG_LEVEL}`` can break Robot Framework logging.\nSee the full list of reserved variables at\n`Robot Framework User Guide <https://robotframework.org/robotframework/latest/RobotFrameworkUserGuide.html#automatic-variables>`_\n"
                            }
                        },
                        {
                            "id": "0326",
                            "name": "mixed-task-test-settings",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#mixed-task-test-settings",
                            "shortDescription": {
                                "text": "Use {{ task_or_test }}-related setting '{{ setting }}' if {{ tasks_or_tests }} section is used"
                            },
                            "fullDescription": {
                                "text": "\nIf ``*** Tasks ***`` section is present in the file, use task-related settings like ``Task Setup``,\n``Task Teardown``, ``Task Template``, ``Task Tags`` and ``Task Timeout`` instead of their `Test` variants.\n\nSimilarly, use test-related settings when using ``*** Test Cases ***`` section.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\nIf ``*** Tasks ***`` section is present in the file, use task-related settings like ``Task Setup``,\n``Task Teardown``, ``Task Template``, ``Task Tags`` and ``Task Timeout`` instead of their `Test` variants.\n\nSimilarly, use test-related settings when using ``*** Test Cases ***`` section.\n",
                                "markdown": "\nIf ``*** Tasks ***`` section is present in the file, use task-related settings like ``Task Setup``,\n``Task Teardown``, ``Task Template``, ``Task Tags`` and ``Task Timeout`` instead of their `Test` variants.\n\nSimilarly, use test-related settings when using ``*** Test Cases ***`` section.\n"
                            }
                        },
                        {
                            "id": "0401",
                            "name": "parsing-error",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#parsing-error",
                            "shortDescription": {
                                "text": "Robot Framework syntax error: {{ error_msg }}"
                            },
                            "fullDescription": {
                                "text": ""
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "",
                                "markdown": ""
                            }
                        },
                        {
                            "id": "0402",
                            "name": "not-enough-whitespace-after-setting",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#not-enough-whitespace-after-setting",
                            "shortDescription": {
                                "text": "Provide at least two spaces after '{{ setting_name }}' setting"
                            },
                            "fullDescription": {
                                "text": "\nExample of rule violation::\n\n    *** Test Cases ***\n    Test\n        [Documentation] doc  # only one space after [Documentation]\n        Keyword\n\n    *** Keywords ***\n    Keyword\n        [Documentation]  This is doc\n        [Arguments] ${var}  # only one space after [Arguments]\n        Should Be True  ${var}\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "\nExample of rule violation::\n\n    *** Test Cases ***\n    Test\n        [Documentation] doc  # only one space after [Documentation]\n        Keyword\n\n    *** Keywords ***\n    Keyword\n        [Documentation]  This is doc\n        [Arguments] ${var}  # only one space after [Arguments]\n        Should Be True  ${var}\n\n",
                                "markdown": "\nExample of rule violation::\n\n    *** Test Cases ***\n    Test\n        [Documentation] doc  # only one space after [Documentation]\n        Keyword\n\n    *** Keywords ***\n    Keyword\n        [Documentation]  This is doc\n        [Arguments] ${var}  # only one space after [Arguments]\n        Should Be True  ${var}\n\n"
                            }
                        },
                        {
                            "id": "0403",
                            "name": "missing-keyword-name",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#missing-keyword-name",
                            "shortDescription": {
                                "text": "Missing keyword name when calling some values"
                            },
                            "fullDescription": {
                                "text": "\nExample of rule violation::\n\n    *** Keywords ***\n    Keyword\n        ${var}\n        ${one}      ${two}\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "\nExample of rule violation::\n\n    *** Keywords ***\n    Keyword\n        ${var}\n        ${one}      ${two}\n\n",
                                "markdown": "\nExample of rule violation::\n\n    *** Keywords ***\n    Keyword\n        ${var}\n        ${one}      ${two}\n\n"
                            }
                        },
                        {
                            "id": "0404",
                            "name": "variables-import-with-args",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#variables-import-with-args",
                            "shortDescription": {
                                "text": "YAML variable files do not take arguments"
                            },
                            "fullDescription": {
                                "text": "\nExample of rule violation::\n\n    *** Settings ***\n    Variables    vars.yaml        arg1\n    Variables    variables.yml    arg2\n    Variables    module           arg3  # valid from RF > 5\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "\nExample of rule violation::\n\n    *** Settings ***\n    Variables    vars.yaml        arg1\n    Variables    variables.yml    arg2\n    Variables    module           arg3  # valid from RF > 5\n\n",
                                "markdown": "\nExample of rule violation::\n\n    *** Settings ***\n    Variables    vars.yaml        arg1\n    Variables    variables.yml    arg2\n    Variables    module           arg3  # valid from RF > 5\n\n"
                            }
                        },
                        {
                            "id": "0405",
                            "name": "invalid-continuation-mark",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#invalid-continuation-mark",
                            "shortDescription": {
                                "text": "Invalid continuation mark '{{ mark }}'. It should be '...'"
                            },
                            "fullDescription": {
                                "text": "\nExample of rule violation::\n\n    Keyword\n    ..  ${var}  # .. instead of ...\n    ...  1\n    ....  2  # .... instead of ...\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "\nExample of rule violation::\n\n    Keyword\n    ..  ${var}  # .. instead of ...\n    ...  1\n    ....  2  # .... instead of ...\n\n",
                                "markdown": "\nExample of rule violation::\n\n    Keyword\n    ..  ${var}  # .. instead of ...\n    ...  1\n    ....  2  # .... instead of ...\n\n"
                            }
                        },
                        {
                            "id": "0406",
                            "name": "not-enough-whitespace-after-newline-marker",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#not-enough-whitespace-after-newline-marker",
                            "shortDescription": {
                                "text": "Provide at least two spaces after '...' marker"
                            },
                            "fullDescription": {
                                "text": "\nExample of rule violation::\n\n    @{LIST}  1\n    ... 2  # not enough whitespace\n    ...  3\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "\nExample of rule violation::\n\n    @{LIST}  1\n    ... 2  # not enough whitespace\n    ...  3\n\n",
                                "markdown": "\nExample of rule violation::\n\n    @{LIST}  1\n    ... 2  # not enough whitespace\n    ...  3\n\n"
                            }
                        },
                        {
                            "id": "0407",
                            "name": "invalid-argument",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#invalid-argument",
                            "shortDescription": {
                                "text": "{{ error_msg }}"
                            },
                            "fullDescription": {
                                "text": "\nArgument names should follow variable naming syntax: start with identifier (``$``, ``@`` or ``&``) and enclosed in \ncurly brackets (``{}``).\n\nValid names::\n\n    Keyword\n        [Arguments]    ${var}    @{args}    &{config}    ${var}=default\n\nInvalid names::\n\n    Keyword\n        [Arguments]    {var}    @args}    var=default\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "\nArgument names should follow variable naming syntax: start with identifier (``$``, ``@`` or ``&``) and enclosed in \ncurly brackets (``{}``).\n\nValid names::\n\n    Keyword\n        [Arguments]    ${var}    @{args}    &{config}    ${var}=default\n\nInvalid names::\n\n    Keyword\n        [Arguments]    {var}    @args}    var=default\n\n",
                                "markdown": "\nArgument names should follow variable naming syntax: start with identifier (``$``, ``@`` or ``&``) and enclosed in \ncurly brackets (``{}``).\n\nValid names::\n\n    Keyword\n        [Arguments]    ${var}    @{args}    &{config}    ${var}=default\n\nInvalid names::\n\n    Keyword\n        [Arguments]    {var}    @args}    var=default\n\n"
                            }
                        },
                        {
                            "id": "0408",
                            "name": "non-existing-setting",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#non-existing-setting",
                            "shortDescription": {
                                "text": "{{ error_msg }}"
                            },
                            "fullDescription": {
                                "text": "\nNon-existing setting can't be used in the code.\n\nExample of rule violation::\n\n   *** Test Cases ***\n   My Test Case\n       [Not Existing]  arg\n       [Arguments]  ${arg}\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "\nNon-existing setting can't be used in the code.\n\nExample of rule violation::\n\n   *** Test Cases ***\n   My Test Case\n       [Not Existing]  arg\n       [Arguments]  ${arg}\n\n",
                                "markdown": "\nNon-existing setting can't be used in the code.\n\nExample of rule violation::\n\n   *** Test Cases ***\n   My Test Case\n       [Not Existing]  arg\n       [Arguments]  ${arg}\n\n"
                            }
                        },
                        {
                            "id": "0409",
                            "name": "setting-not-supported",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#setting-not-supported",
                            "shortDescription": {
                                "text": "Setting '[{{ setting_name }}]' is not supported in {{ test_or_keyword }}. Allowed are: {{ allowed_settings }}"
                            },
                            "fullDescription": {
                                "text": "\nFollowing settings are supported in Test Case or Task::\n\n    [Documentation]\t Used for specifying a test case documentation.\n    [Tags]\t         Used for tagging test cases.\n    [Setup]\t         Used for specifying a test setup.\n    [Teardown]\t     Used for specifying a test teardown.\n    [Template]\t     Used for specifying a template keyword.\n    [Timeout]\t     Used for specifying a test case timeout.\n\nFollowing settings are supported in Keyword::\n\n    [Documentation]\t Used for specifying a user keyword documentation.\n    [Tags]\t         Used for specifying user keyword tags.\n    [Arguments]\t     Used for specifying user keyword arguments.\n    [Return]\t     Used for specifying user keyword return values.\n    [Teardown]\t     Used for specifying user keyword teardown.\n    [Timeout]\t     Used for specifying a user keyword timeout.\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "\nFollowing settings are supported in Test Case or Task::\n\n    [Documentation]\t Used for specifying a test case documentation.\n    [Tags]\t         Used for tagging test cases.\n    [Setup]\t         Used for specifying a test setup.\n    [Teardown]\t     Used for specifying a test teardown.\n    [Template]\t     Used for specifying a template keyword.\n    [Timeout]\t     Used for specifying a test case timeout.\n\nFollowing settings are supported in Keyword::\n\n    [Documentation]\t Used for specifying a user keyword documentation.\n    [Tags]\t         Used for specifying user keyword tags.\n    [Arguments]\t     Used for specifying user keyword arguments.\n    [Return]\t     Used for specifying user keyword return values.\n    [Teardown]\t     Used for specifying user keyword teardown.\n    [Timeout]\t     Used for specifying a user keyword timeout.\n\n",
                                "markdown": "\nFollowing settings are supported in Test Case or Task::\n\n    [Documentation]\t Used for specifying a test case documentation.\n    [Tags]\t         Used for tagging test cases.\n    [Setup]\t         Used for specifying a test setup.\n    [Teardown]\t     Used for specifying a test teardown.\n    [Template]\t     Used for specifying a template keyword.\n    [Timeout]\t     Used for specifying a test case timeout.\n\nFollowing settings are supported in Keyword::\n\n    [Documentation]\t Used for specifying a user keyword documentation.\n    [Tags]\t         Used for specifying user keyword tags.\n    [Arguments]\t     Used for specifying user keyword arguments.\n    [Return]\t     Used for specifying user keyword return values.\n    [Teardown]\t     Used for specifying user keyword teardown.\n    [Timeout]\t     Used for specifying a user keyword timeout.\n\n"
                            }
                        },
                        {
                            "id": "0410",
                            "name": "not-enough-whitespace-after-variable",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#not-enough-whitespace-after-variable",
                            "shortDescription": {
                                "text": "Provide at least two spaces after '{{ variable_name }}' variable name"
                            },
                            "fullDescription": {
                                "text": "\nExample of rule violation::\n\n    ${variable} 1  # not enough whitespace\n    ${other_var}  2\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "\nExample of rule violation::\n\n    ${variable} 1  # not enough whitespace\n    ${other_var}  2\n\n",
                                "markdown": "\nExample of rule violation::\n\n    ${variable} 1  # not enough whitespace\n    ${other_var}  2\n\n"
                            }
                        },
                        {
                            "id": "0411",
                            "name": "not-enough-whitespace-after-suite-setting",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#not-enough-whitespace-after-suite-setting",
                            "shortDescription": {
                                "text": "Provide at least two spaces after '{{ setting_name }}' setting"
                            },
                            "fullDescription": {
                                "text": "\nExample of rule violation::\n\n    *** Settings ***\n    Library Collections  # not enough whitespace\n    Force Tags  tag\n    ...  tag2\n    Suite Setup Keyword  # not enough whitespace\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "\nExample of rule violation::\n\n    *** Settings ***\n    Library Collections  # not enough whitespace\n    Force Tags  tag\n    ...  tag2\n    Suite Setup Keyword  # not enough whitespace\n\n",
                                "markdown": "\nExample of rule violation::\n\n    *** Settings ***\n    Library Collections  # not enough whitespace\n    Force Tags  tag\n    ...  tag2\n    Suite Setup Keyword  # not enough whitespace\n\n"
                            }
                        },
                        {
                            "id": "0412",
                            "name": "invalid-for-loop",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#invalid-for-loop",
                            "shortDescription": {
                                "text": "Invalid for loop syntax: {{ error_msg }}"
                            },
                            "fullDescription": {
                                "text": ""
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "",
                                "markdown": ""
                            }
                        },
                        {
                            "id": "0413",
                            "name": "invalid-if",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#invalid-if",
                            "shortDescription": {
                                "text": "Invalid IF syntax: {{ error_msg }}"
                            },
                            "fullDescription": {
                                "text": ""
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "",
                                "markdown": ""
                            }
                        },
                        {
                            "id": "0414",
                            "name": "return-in-test-case",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#return-in-test-case",
                            "shortDescription": {
                                "text": "RETURN can only be used inside a user keyword"
                            },
                            "fullDescription": {
                                "text": ""
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "",
                                "markdown": ""
                            }
                        },
                        {
                            "id": "0415",
                            "name": "invalid-section-in-resource",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#invalid-section-in-resource",
                            "shortDescription": {
                                "text": "Resource file can't contain '{{ section_name }}' section"
                            },
                            "fullDescription": {
                                "text": "\nThe higher-level structure of resource files is the same as that of test case files,\nbut they can't contain Test Cases or Tasks sections.\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "\nThe higher-level structure of resource files is the same as that of test case files,\nbut they can't contain Test Cases or Tasks sections.\n",
                                "markdown": "\nThe higher-level structure of resource files is the same as that of test case files,\nbut they can't contain Test Cases or Tasks sections.\n"
                            }
                        },
                        {
                            "id": "0416",
                            "name": "invalid-setting-in-resource",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#invalid-setting-in-resource",
                            "shortDescription": {
                                "text": "Settings section in resource file can't contain '{{ section_name }}' setting"
                            },
                            "fullDescription": {
                                "text": "\nThe Setting section in resource files can contain only import settings (``Library``,\n``Resource``, ``Variables``), ``Documentation`` and ``Keyword Tags``.\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "\nThe Setting section in resource files can contain only import settings (``Library``,\n``Resource``, ``Variables``), ``Documentation`` and ``Keyword Tags``.\n",
                                "markdown": "\nThe Setting section in resource files can contain only import settings (``Library``,\n``Resource``, ``Variables``), ``Documentation`` and ``Keyword Tags``.\n"
                            }
                        },
                        {
                            "id": "0417",
                            "name": "unsupported-setting-in-init-file",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#unsupported-setting-in-init-file",
                            "shortDescription": {
                                "text": "Setting '{{ setting }}' is not supported in initialization files"
                            },
                            "fullDescription": {
                                "text": "\nSettings ``Default Tags`` and ``Test Template`` are not supported in initialization files.\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "\nSettings ``Default Tags`` and ``Test Template`` are not supported in initialization files.\n",
                                "markdown": "\nSettings ``Default Tags`` and ``Test Template`` are not supported in initialization files.\n"
                            }
                        },
                        {
                            "id": "0501",
                            "name": "too-long-keyword",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#too-long-keyword",
                            "shortDescription": {
                                "text": "Keyword '{{ keyword_name }}' is too long ({{ keyword_length }}/{{ allowed_length}})"
                            },
                            "fullDescription": {
                                "text": ""
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "",
                                "markdown": ""
                            }
                        },
                        {
                            "id": "0502",
                            "name": "too-few-calls-in-keyword",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#too-few-calls-in-keyword",
                            "shortDescription": {
                                "text": "Keyword '{{ keyword_name }}' has too few keywords inside ({{ keyword_count }}/{{ min_allowed_count }})"
                            },
                            "fullDescription": {
                                "text": ""
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "",
                                "markdown": ""
                            }
                        },
                        {
                            "id": "0503",
                            "name": "too-many-calls-in-keyword",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#too-many-calls-in-keyword",
                            "shortDescription": {
                                "text": "Keyword '{{ keyword_name }}' has too many keywords inside ({{ keyword_count }}/{{ max_allowed_count }})"
                            },
                            "fullDescription": {
                                "text": ""
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "",
                                "markdown": ""
                            }
                        },
                        {
                            "id": "0504",
                            "name": "too-long-test-case",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#too-long-test-case",
                            "shortDescription": {
                                "text": "Test case '{{ test_name }}' is too long ({{ test_length }}/{{ allowed_length }})"
                            },
                            "fullDescription": {
                                "text": ""
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "",
                                "markdown": ""
                            }
                        },
                        {
                            "id": "0505",
                            "name": "too-many-calls-in-test-case",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#too-many-calls-in-test-case",
                            "shortDescription": {
                                "text": "Test case '{{ test_name }}' has too many keywords inside ({{ keyword_count }}/{{ max_allowed_count }})"
                            },
                            "fullDescription": {
                                "text": "Redesign the test and move complex logic to separate keywords to increase readability."
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "Redesign the test and move complex logic to separate keywords to increase readability.",
                                "markdown": "Redesign the test and move complex logic to separate keywords to increase readability."
                            }
                        },
                        {
                            "id": "0506",
                            "name": "file-too-long",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#file-too-long",
                            "shortDescription": {
                                "text": "File has too many lines ({{ lines_count }}/{{max_allowed_count }})"
                            },
                            "fullDescription": {
                                "text": ""
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "",
                                "markdown": ""
                            }
                        },
                        {
                            "id": "0507",
                            "name": "too-many-arguments",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#too-many-arguments",
                            "shortDescription": {
                                "text": "Keyword '{{ keyword_name }}' has too many arguments ({{ arguments_count }}/{{ max_allowed_count }})"
                            },
                            "fullDescription": {
                                "text": ""
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "",
                                "markdown": ""
                            }
                        },
                        {
                            "id": "0508",
                            "name": "line-too-long",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#line-too-long",
                            "shortDescription": {
                                "text": "Line is too long ({{ line_length }}/{{ allowed_length }})"
                            },
                            "fullDescription": {
                                "text": "\nIt is possible to ignore lines that match regex pattern. Configure it using following option::\n\n    robocop --configure line-too-long:ignore_pattern:pattern\n\nThe default pattern is ``https?://\\S+`` that ignores the lines that look like an URL.\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\nIt is possible to ignore lines that match regex pattern. Configure it using following option::\n\n    robocop --configure line-too-long:ignore_pattern:pattern\n\nThe default pattern is ``https?://\\S+`` that ignores the lines that look like an URL.\n\n",
                                "markdown": "\nIt is possible to ignore lines that match regex pattern. Configure it using following option::\n\n    robocop --configure line-too-long:ignore_pattern:pattern\n\nThe default pattern is ``https?://\\S+`` that ignores the lines that look like an URL.\n\n"
                            }
                        },
                        {
                            "id": "0509",
                            "name": "empty-section",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#empty-section",
                            "shortDescription": {
                                "text": "Section '{{ section_name }}' is empty"
                            },
                            "fullDescription": {
                                "text": ""
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "",
                                "markdown": ""
                            }
                        },
                        {
                            "id": "0510",
                            "name": "number-of-returned-values",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#number-of-returned-values",
                            "shortDescription": {
                                "text": "Too many return values ({{ return_count }}/{{ max_allowed_count }})"
                            },
                            "fullDescription": {
                                "text": ""
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "",
                                "markdown": ""
                            }
                        },
                        {
                            "id": "0511",
                            "name": "empty-metadata",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#empty-metadata",
                            "shortDescription": {
                                "text": "Metadata settings does not have any value set"
                            },
                            "fullDescription": {
                                "text": ""
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "",
                                "markdown": ""
                            }
                        },
                        {
                            "id": "0512",
                            "name": "empty-documentation",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#empty-documentation",
                            "shortDescription": {
                                "text": "Documentation of {{ block_name }} is empty"
                            },
                            "fullDescription": {
                                "text": ""
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "",
                                "markdown": ""
                            }
                        },
                        {
                            "id": "0513",
                            "name": "empty-force-tags",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#empty-force-tags",
                            "shortDescription": {
                                "text": "Force Tags are empty"
                            },
                            "fullDescription": {
                                "text": ""
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "",
                                "markdown": ""
                            }
                        },
                        {
                            "id": "0514",
                            "name": "empty-default-tags",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#empty-default-tags",
                            "shortDescription": {
                                "text": "Default Tags are empty"
                            },
                            "fullDescription": {
                                "text": ""
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "",
                                "markdown": ""
                            }
                        },
                        {
                            "id": "0515",
                            "name": "empty-variables-import",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#empty-variables-import",
                            "shortDescription": {
                                "text": "Import variables path is empty"
                            },
                            "fullDescription": {
                                "text": ""
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "",
                                "markdown": ""
                            }
                        },
                        {
                            "id": "0516",
                            "name": "empty-resource-import",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#empty-resource-import",
                            "shortDescription": {
                                "text": "Import resource path is empty"
                            },
                            "fullDescription": {
                                "text": ""
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "",
                                "markdown": ""
                            }
                        },
                        {
                            "id": "0517",
                            "name": "empty-library-import",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#empty-library-import",
                            "shortDescription": {
                                "text": "Import library path is empty"
                            },
                            "fullDescription": {
                                "text": ""
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "",
                                "markdown": ""
                            }
                        },
                        {
                            "id": "0518",
                            "name": "empty-setup",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#empty-setup",
                            "shortDescription": {
                                "text": "Setup of {{ block_name }} does not have any keywords"
                            },
                            "fullDescription": {
                                "text": ""
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "",
                                "markdown": ""
                            }
                        },
                        {
                            "id": "0519",
                            "name": "empty-suite-setup",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#empty-suite-setup",
                            "shortDescription": {
                                "text": "Suite Setup does not have any keywords"
                            },
                            "fullDescription": {
                                "text": ""
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "",
                                "markdown": ""
                            }
                        },
                        {
                            "id": "0520",
                            "name": "empty-test-setup",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#empty-test-setup",
                            "shortDescription": {
                                "text": "Test Setup does not have any keywords"
                            },
                            "fullDescription": {
                                "text": ""
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "",
                                "markdown": ""
                            }
                        },
                        {
                            "id": "0521",
                            "name": "empty-teardown",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#empty-teardown",
                            "shortDescription": {
                                "text": "Teardown of {{ block_name }} does not have any keywords"
                            },
                            "fullDescription": {
                                "text": ""
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "",
                                "markdown": ""
                            }
                        },
                        {
                            "id": "0522",
                            "name": "empty-suite-teardown",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#empty-suite-teardown",
                            "shortDescription": {
                                "text": "Suite Teardown does not have any keywords"
                            },
                            "fullDescription": {
                                "text": ""
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "",
                                "markdown": ""
                            }
                        },
                        {
                            "id": "0523",
                            "name": "empty-test-teardown",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#empty-test-teardown",
                            "shortDescription": {
                                "text": "Test Teardown does not have any keywords"
                            },
                            "fullDescription": {
                                "text": ""
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "",
                                "markdown": ""
                            }
                        },
                        {
                            "id": "0524",
                            "name": "empty-timeout",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#empty-timeout",
                            "shortDescription": {
                                "text": "Timeout of {{ block_name }} is empty"
                            },
                            "fullDescription": {
                                "text": ""
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "",
                                "markdown": ""
                            }
                        },
                        {
                            "id": "0525",
                            "name": "empty-test-timeout",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#empty-test-timeout",
                            "shortDescription": {
                                "text": "Test Timeout is empty"
                            },
                            "fullDescription": {
                                "text": ""
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "",
                                "markdown": ""
                            }
                        },
                        {
                            "id": "0526",
                            "name": "empty-arguments",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#empty-arguments",
                            "shortDescription": {
                                "text": "Arguments of {{ block_name }} are empty"
                            },
                            "fullDescription": {
                                "text": ""
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "",
                                "markdown": ""
                            }
                        },
                        {
                            "id": "0527",
                            "name": "too-many-test-cases",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#too-many-test-cases",
                            "shortDescription": {
                                "text": "Too many test cases ({{ test_count }}/{{ max_allowed_count }})"
                            },
                            "fullDescription": {
                                "text": ""
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "",
                                "markdown": ""
                            }
                        },
                        {
                            "id": "0528",
                            "name": "too-few-calls-in-test-case",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#too-few-calls-in-test-case",
                            "shortDescription": {
                                "text": "Test case '{{ test_name }}' has too few keywords inside ({{ keyword_count }}/{{ min_allowed_count }})"
                            },
                            "fullDescription": {
                                "text": "\nTest without keywords will fail. Add more keywords or set results using ``Fail``, ``Pass Execution`` or\n``Skip`` keywords::\n\n    *** Test Cases ***\n    Test case\n        [Tags]    smoke\n        Skip    Test case draft\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "\nTest without keywords will fail. Add more keywords or set results using ``Fail``, ``Pass Execution`` or\n``Skip`` keywords::\n\n    *** Test Cases ***\n    Test case\n        [Tags]    smoke\n        Skip    Test case draft\n\n",
                                "markdown": "\nTest without keywords will fail. Add more keywords or set results using ``Fail``, ``Pass Execution`` or\n``Skip`` keywords::\n\n    *** Test Cases ***\n    Test case\n        [Tags]    smoke\n        Skip    Test case draft\n\n"
                            }
                        },
                        {
                            "id": "0529",
                            "name": "empty-test-template",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#empty-test-template",
                            "shortDescription": {
                                "text": "Test Template is empty"
                            },
                            "fullDescription": {
                                "text": "\n``Test Template`` sets the template to all tests in a suite. Empty value is considered an error\nbecause it leads the users to wrong impression on how the suite operates.\nWithout value, the setting is ignored and the tests are not templated.\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "\n``Test Template`` sets the template to all tests in a suite. Empty value is considered an error\nbecause it leads the users to wrong impression on how the suite operates.\nWithout value, the setting is ignored and the tests are not templated.\n",
                                "markdown": "\n``Test Template`` sets the template to all tests in a suite. Empty value is considered an error\nbecause it leads the users to wrong impression on how the suite operates.\nWithout value, the setting is ignored and the tests are not templated.\n"
                            }
                        },
                        {
                            "id": "0530",
                            "name": "empty-template",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#empty-template",
                            "shortDescription": {
                                "text": "Template of {{ block_name }} is empty. To overwrite suite Test Template use more explicit [Template]  NONE"
                            },
                            "fullDescription": {
                                "text": "\nThe ``[Template]`` setting overrides the possible template set in the Setting section, and an empty value for \n``[Template]`` means that the test has no template even when Test Template is used.\n\nIf it is intended behaviour, use more explicit ``NONE`` value to indicate that you want to overwrite suite \nTest Template::\n\n    *** Settings ***\n    Test Template    Template Keyword\n\n    *** Test Cases ***\n    Templated test\n        argument\n\n    Not templated test\n        [Template]    NONE\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\nThe ``[Template]`` setting overrides the possible template set in the Setting section, and an empty value for \n``[Template]`` means that the test has no template even when Test Template is used.\n\nIf it is intended behaviour, use more explicit ``NONE`` value to indicate that you want to overwrite suite \nTest Template::\n\n    *** Settings ***\n    Test Template    Template Keyword\n\n    *** Test Cases ***\n    Templated test\n        argument\n\n    Not templated test\n        [Template]    NONE\n\n",
                                "markdown": "\nThe ``[Template]`` setting overrides the possible template set in the Setting section, and an empty value for \n``[Template]`` means that the test has no template even when Test Template is used.\n\nIf it is intended behaviour, use more explicit ``NONE`` value to indicate that you want to overwrite suite \nTest Template::\n\n    *** Settings ***\n    Test Template    Template Keyword\n\n    *** Test Cases ***\n    Templated test\n        argument\n\n    Not templated test\n        [Template]    NONE\n\n"
                            }
                        },
                        {
                            "id": "0531",
                            "name": "empty-keyword-tags",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#empty-keyword-tags",
                            "shortDescription": {
                                "text": "Keyword Tags are empty"
                            },
                            "fullDescription": {
                                "text": ""
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "",
                                "markdown": ""
                            }
                        },
                        {
                            "id": "0532",
                            "name": "arguments-per-line",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#arguments-per-line",
                            "shortDescription": {
                                "text": "There is too many arguments per continuation line ({{ arguments_count }} / {{ max_arguments_count }})"
                            },
                            "fullDescription": {
                                "text": "\nIf the keyword's ``[Arguments]`` are split into multiple lines, it is recommended to put only one argument\nper every line.\n\nBad |:x:| ::\n\n    *** Keywords ***\n    Keyword With Multiple Arguments\n    [Arguments]    ${first_arg\n    ...    ${second_arg}    ${third_arg}=default\n\n Good |:white_check_mark:| ::\n\n..  code-block:: none\n\n    *** Keywords ***\n    Keyword With Multiple Arguments\n    [Arguments]    ${first_arg\n    ...    ${second_arg}\n    ...    ${third_arg}=default\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "note"
                            },
                            "help": {
                                "text": "\nIf the keyword's ``[Arguments]`` are split into multiple lines, it is recommended to put only one argument\nper every line.\n\nBad |:x:| ::\n\n    *** Keywords ***\n    Keyword With Multiple Arguments\n    [Arguments]    ${first_arg\n    ...    ${second_arg}    ${third_arg}=default\n\n Good |:white_check_mark:| ::\n\n..  code-block:: none\n\n    *** Keywords ***\n    Keyword With Multiple Arguments\n    [Arguments]    ${first_arg\n    ...    ${second_arg}\n    ...    ${third_arg}=default\n\n",
                                "markdown": "\nIf the keyword's ``[Arguments]`` are split into multiple lines, it is recommended to put only one argument\nper every line.\n\nBad |:x:| ::\n\n    *** Keywords ***\n    Keyword With Multiple Arguments\n    [Arguments]    ${first_arg\n    ...    ${second_arg}    ${third_arg}=default\n\n Good |:white_check_mark:| ::\n\n..  code-block:: none\n\n    *** Keywords ***\n    Keyword With Multiple Arguments\n    [Arguments]    ${first_arg\n    ...    ${second_arg}\n    ...    ${third_arg}=default\n\n"
                            }
                        },
                        {
                            "id": "0601",
                            "name": "tag-with-space",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#tag-with-space",
                            "shortDescription": {
                                "text": "Tag '{{ tag }}' should not contain spaces"
                            },
                            "fullDescription": {
                                "text": "\nExample of rule violation::\n\n    Test\n        [Tags]  ${tag with space}\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\nExample of rule violation::\n\n    Test\n        [Tags]  ${tag with space}\n\n",
                                "markdown": "\nExample of rule violation::\n\n    Test\n        [Tags]  ${tag with space}\n\n"
                            }
                        },
                        {
                            "id": "0602",
                            "name": "tag-with-or-and",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#tag-with-or-and",
                            "shortDescription": {
                                "text": "Tag '{{ tag }}' with reserved word OR/AND. Hint: make sure to include this tag using lowercase name to avoid issues"
                            },
                            "fullDescription": {
                                "text": "\n``OR`` and ``AND`` words are used to combine tags when selecting tests to be run in Robot Framework. Using following \nconfiguration::\n\n    robot --include tagANDtag2\n\nRobot Framework will only execute tests that contain ``tag`` and ``tag2``. That's why it's best to avoid ``AND`` and ``OR``\nin tag names. See \n`docs <https://robotframework.org/robotframework/latest/RobotFrameworkUserGuide.html#tag-patterns>`_\nfor more information.\n\nTag matching is case-insensitive. If your tag contains ``OR`` or ``AND`` you can use lowercase to match it.\nFor example, if your tag is ``PORT``, you can match it with ``port``.\n"
                            },
                            "defaultConfiguration": {
                                "level": "note"
                            },
                            "help": {
                                "text": "\n``OR`` and ``AND`` words are used to combine tags when selecting tests to be run in Robot Framework. Using following \nconfiguration::\n\n    robot --include tagANDtag2\n\nRobot Framework will only execute tests that contain ``tag`` and ``tag2``. That's why it's best to avoid ``AND`` and ``OR``\nin tag names. See \n`docs <https://robotframework.org/robotframework/latest/RobotFrameworkUserGuide.html#tag-patterns>`_\nfor more information.\n\nTag matching is case-insensitive. If your tag contains ``OR`` or ``AND`` you can use lowercase to match it.\nFor example, if your tag is ``PORT``, you can match it with ``port``.\n",
                                "markdown": "\n``OR`` and ``AND`` words are used to combine tags when selecting tests to be run in Robot Framework. Using following \nconfiguration::\n\n    robot --include tagANDtag2\n\nRobot Framework will only execute tests that contain ``tag`` and ``tag2``. That's why it's best to avoid ``AND`` and ``OR``\nin tag names. See \n`docs <https://robotframework.org/robotframework/latest/RobotFrameworkUserGuide.html#tag-patterns>`_\nfor more information.\n\nTag matching is case-insensitive. If your tag contains ``OR`` or ``AND`` you can use lowercase to match it.\nFor example, if your tag is ``PORT``, you can match it with ``port``.\n"
                            }
                        },
                        {
                            "id": "0603",
                            "name": "tag-with-reserved-word",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#tag-with-reserved-word",
                            "shortDescription": {
                                "text": "Tag '{{ tag }}' prefixed with reserved word `robot:`"
                            },
                            "fullDescription": {
                                "text": "\n``robot:`` prefix is used by Robot Framework special tags. More details \n`here <https://robotframework.org/robotframework/latest/RobotFrameworkUserGuide.html#reserved-tags>`_.\nSpecial tags currently in use:\n\n    - robot:exit\n    - robot:flatten\n    - robot:no-dry-run\n    - robot:continue-on-failure \n    - robot:recursive-continue-on-failure\n    - robot:skip\n    - robot:skip-on-failure\n    - robot:stop-on-failure\n    - robot:recursive-stop-on-failure\n    - robot:exclude\n    - robot:private\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\n``robot:`` prefix is used by Robot Framework special tags. More details \n`here <https://robotframework.org/robotframework/latest/RobotFrameworkUserGuide.html#reserved-tags>`_.\nSpecial tags currently in use:\n\n    - robot:exit\n    - robot:flatten\n    - robot:no-dry-run\n    - robot:continue-on-failure \n    - robot:recursive-continue-on-failure\n    - robot:skip\n    - robot:skip-on-failure\n    - robot:stop-on-failure\n    - robot:recursive-stop-on-failure\n    - robot:exclude\n    - robot:private\n\n",
                                "markdown": "\n``robot:`` prefix is used by Robot Framework special tags. More details \n`here <https://robotframework.org/robotframework/latest/RobotFrameworkUserGuide.html#reserved-tags>`_.\nSpecial tags currently in use:\n\n    - robot:exit\n    - robot:flatten\n    - robot:no-dry-run\n    - robot:continue-on-failure \n    - robot:recursive-continue-on-failure\n    - robot:skip\n    - robot:skip-on-failure\n    - robot:stop-on-failure\n    - robot:recursive-stop-on-failure\n    - robot:exclude\n    - robot:private\n\n"
                            }
                        },
                        {
                            "id": "0605",
                            "name": "could-be-test-tags",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#could-be-test-tags",
                            "shortDescription": {
                                "text": "All tests in suite share these tags: '{{ tags }}'. You can define them in 'Test Tags' in suite settings instead"
                            },
                            "fullDescription": {
                                "text": "\nExample::\n\n    *** Test Cases ***\n    Test\n        [Tags]  featureX  smoke\n        Step\n\n    Test 2\n        [Tags]  featureX\n        Step\n\nIn this example all tests share one common tag ``featureX``. It can be declared just once using ``Test Tags``\nor ``Task Tags``.\nThis rule was renamed from ``could-be-force-tags`` to ``could-be-test-tags`` in Robocop 2.6.0.\n"
                            },
                            "defaultConfiguration": {
                                "level": "note"
                            },
                            "help": {
                                "text": "\nExample::\n\n    *** Test Cases ***\n    Test\n        [Tags]  featureX  smoke\n        Step\n\n    Test 2\n        [Tags]  featureX\n        Step\n\nIn this example all tests share one common tag ``featureX``. It can be declared just once using ``Test Tags``\nor ``Task Tags``.\nThis rule was renamed from ``could-be-force-tags`` to ``could-be-test-tags`` in Robocop 2.6.0.\n",
                                "markdown": "\nExample::\n\n    *** Test Cases ***\n    Test\n        [Tags]  featureX  smoke\n        Step\n\n    Test 2\n        [Tags]  featureX\n        Step\n\nIn this example all tests share one common tag ``featureX``. It can be declared just once using ``Test Tags``\nor ``Task Tags``.\nThis rule was renamed from ``could-be-force-tags`` to ``could-be-test-tags`` in Robocop 2.6.0.\n"
                            }
                        },
                        {
                            "id": "0606",
                            "name": "tag-already-set-in-test-tags",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#tag-already-set-in-test-tags",
                            "shortDescription": {
                                "text": "Tag '{{ tag }}' is already set by {{ test_force_tags }} in suite settings"
                            },
                            "fullDescription": {
                                "text": "\nAvoid repeating the same tags in tests when the tag is already declared in ``Test Tags`` or ``Force Tags``.\nExample of rule violation::\n\n    *** Settings ***\n    Test Tags  common_tag\n\n    *** Test Cases ***\n    Test\n        [Tags]  sanity  common_tag\n        Some Keyword\n\nThis rule was renamed from ``tag-already-set-in-force-tags`` to ``tag-already-set-in-test-tags`` in\nRobocop 2.6.0.\n"
                            },
                            "defaultConfiguration": {
                                "level": "note"
                            },
                            "help": {
                                "text": "\nAvoid repeating the same tags in tests when the tag is already declared in ``Test Tags`` or ``Force Tags``.\nExample of rule violation::\n\n    *** Settings ***\n    Test Tags  common_tag\n\n    *** Test Cases ***\n    Test\n        [Tags]  sanity  common_tag\n        Some Keyword\n\nThis rule was renamed from ``tag-already-set-in-force-tags`` to ``tag-already-set-in-test-tags`` in\nRobocop 2.6.0.\n",
                                "markdown": "\nAvoid repeating the same tags in tests when the tag is already declared in ``Test Tags`` or ``Force Tags``.\nExample of rule violation::\n\n    *** Settings ***\n    Test Tags  common_tag\n\n    *** Test Cases ***\n    Test\n        [Tags]  sanity  common_tag\n        Some Keyword\n\nThis rule was renamed from ``tag-already-set-in-force-tags`` to ``tag-already-set-in-test-tags`` in\nRobocop 2.6.0.\n"
                            }
                        },
                        {
                            "id": "0607",
                            "name": "unnecessary-default-tags",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#unnecessary-default-tags",
                            "shortDescription": {
                                "text": "Tags defined in Default Tags are always overwritten"
                            },
                            "fullDescription": {
                                "text": "\nExample of rule violation::\n\n    *** Settings ***\n    Default Tags  tag1  tag2\n\n    *** Test Cases ***\n    Test\n        [Tags]  tag3\n        Step\n\n    Test 2\n        [Tags]  tag4\n        Step\n\nSince ``Test`` and ``Test 2`` have ``[Tags]`` section, ``Default Tags`` setting is never used.\n"
                            },
                            "defaultConfiguration": {
                                "level": "note"
                            },
                            "help": {
                                "text": "\nExample of rule violation::\n\n    *** Settings ***\n    Default Tags  tag1  tag2\n\n    *** Test Cases ***\n    Test\n        [Tags]  tag3\n        Step\n\n    Test 2\n        [Tags]  tag4\n        Step\n\nSince ``Test`` and ``Test 2`` have ``[Tags]`` section, ``Default Tags`` setting is never used.\n",
                                "markdown": "\nExample of rule violation::\n\n    *** Settings ***\n    Default Tags  tag1  tag2\n\n    *** Test Cases ***\n    Test\n        [Tags]  tag3\n        Step\n\n    Test 2\n        [Tags]  tag4\n        Step\n\nSince ``Test`` and ``Test 2`` have ``[Tags]`` section, ``Default Tags`` setting is never used.\n"
                            }
                        },
                        {
                            "id": "0608",
                            "name": "empty-tags",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#empty-tags",
                            "shortDescription": {
                                "text": "[Tags] setting without values{{ optional_warning }}"
                            },
                            "fullDescription": {
                                "text": "\nIf you want to use empty ``[Tags]`` (for example to overwrite ``Default Tags``) then use ``NONE`` value \nto be explicit.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\nIf you want to use empty ``[Tags]`` (for example to overwrite ``Default Tags``) then use ``NONE`` value \nto be explicit.\n",
                                "markdown": "\nIf you want to use empty ``[Tags]`` (for example to overwrite ``Default Tags``) then use ``NONE`` value \nto be explicit.\n"
                            }
                        },
                        {
                            "id": "0609",
                            "name": "duplicated-tags",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#duplicated-tags",
                            "shortDescription": {
                                "text": "Multiple tags with name '{{ name }}' (first occurrence at line {{ line }} column {{ column }})"
                            },
                            "fullDescription": {
                                "text": "\nTags are free text, but they are normalized so that they are converted to lowercase and all spaces are removed.\nOnly first tag is used, other occurrences are ignored.\n\nExample of duplicated tags::\n\n    Test\n        [Tags]    Tag    TAG    tag    t a g\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\nTags are free text, but they are normalized so that they are converted to lowercase and all spaces are removed.\nOnly first tag is used, other occurrences are ignored.\n\nExample of duplicated tags::\n\n    Test\n        [Tags]    Tag    TAG    tag    t a g\n\n",
                                "markdown": "\nTags are free text, but they are normalized so that they are converted to lowercase and all spaces are removed.\nOnly first tag is used, other occurrences are ignored.\n\nExample of duplicated tags::\n\n    Test\n        [Tags]    Tag    TAG    tag    t a g\n\n"
                            }
                        },
                        {
                            "id": "0610",
                            "name": "could-be-keyword-tags",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#could-be-keyword-tags",
                            "shortDescription": {
                                "text": "All keywords in suite share these tags: '{{ tags }}'. You can define them in 'Keyword Tags' in suite settings instead"
                            },
                            "fullDescription": {
                                "text": "\nExample::\n\n    *** Keywords ***\n    Keyword\n        [Tags]  featureX  smoke\n        Step\n\n    Keyword 2\n        [Tags]  featureX\n        Step\n\nIn this example all keywords share one common tag ``featureX``. It can be declared just once using ``Keyword Tags``.\n"
                            },
                            "defaultConfiguration": {
                                "level": "note"
                            },
                            "help": {
                                "text": "\nExample::\n\n    *** Keywords ***\n    Keyword\n        [Tags]  featureX  smoke\n        Step\n\n    Keyword 2\n        [Tags]  featureX\n        Step\n\nIn this example all keywords share one common tag ``featureX``. It can be declared just once using ``Keyword Tags``.\n",
                                "markdown": "\nExample::\n\n    *** Keywords ***\n    Keyword\n        [Tags]  featureX  smoke\n        Step\n\n    Keyword 2\n        [Tags]  featureX\n        Step\n\nIn this example all keywords share one common tag ``featureX``. It can be declared just once using ``Keyword Tags``.\n"
                            }
                        },
                        {
                            "id": "0611",
                            "name": "tag-already-set-in-keyword-tags",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#tag-already-set-in-keyword-tags",
                            "shortDescription": {
                                "text": "Tag '{{ tag }}' is already set by {{ keyword_tags }} in suite settings"
                            },
                            "fullDescription": {
                                "text": "\nAvoid repeating the same tags in keywords when the tag is already declared in ``Keyword Tags``.\nExample of rule violation::\n\n    *** Settings ***\n    Keyword Tags  common_tag\n\n    *** Keywords ***\n    Keyword\n        [Tags]  sanity  common_tag\n"
                            },
                            "defaultConfiguration": {
                                "level": "note"
                            },
                            "help": {
                                "text": "\nAvoid repeating the same tags in keywords when the tag is already declared in ``Keyword Tags``.\nExample of rule violation::\n\n    *** Settings ***\n    Keyword Tags  common_tag\n\n    *** Keywords ***\n    Keyword\n        [Tags]  sanity  common_tag\n",
                                "markdown": "\nAvoid repeating the same tags in keywords when the tag is already declared in ``Keyword Tags``.\nExample of rule violation::\n\n    *** Settings ***\n    Keyword Tags  common_tag\n\n    *** Keywords ***\n    Keyword\n        [Tags]  sanity  common_tag\n"
                            }
                        },
                        {
                            "id": "0701",
                            "name": "todo-in-comment",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#todo-in-comment",
                            "shortDescription": {
                                "text": "Found a marker '{{ marker }}' in the comments"
                            },
                            "fullDescription": {
                                "text": "\nReport occurrences of the configured, case-insensitive marker in the comments.\nBy default, it reports ``TODO`` and ``FIXME`` markers.\n\nExample::\n\n    # TODO: Refactor this code\n    # fixme\n\nConfiguration example::\n\n    robocop --configure \"todo-in-comment:markers:todo,Remove me,Fix this!\"\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\nReport occurrences of the configured, case-insensitive marker in the comments.\nBy default, it reports ``TODO`` and ``FIXME`` markers.\n\nExample::\n\n    # TODO: Refactor this code\n    # fixme\n\nConfiguration example::\n\n    robocop --configure \"todo-in-comment:markers:todo,Remove me,Fix this!\"\n\n",
                                "markdown": "\nReport occurrences of the configured, case-insensitive marker in the comments.\nBy default, it reports ``TODO`` and ``FIXME`` markers.\n\nExample::\n\n    # TODO: Refactor this code\n    # fixme\n\nConfiguration example::\n\n    robocop --configure \"todo-in-comment:markers:todo,Remove me,Fix this!\"\n\n"
                            }
                        },
                        {
                            "id": "0702",
                            "name": "missing-space-after-comment",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#missing-space-after-comment",
                            "shortDescription": {
                                "text": "Missing blank space after comment character"
                            },
                            "fullDescription": {
                                "text": "\nMake sure to have one blank space after ``#`` comment character.\nConfigured regex for block comment should take into account the first character is ``#``.\n\nExample::\n\n    #bad\n    # good\n    ### good block\n\nConfiguration example::\n\n    robocop --configure missing-space-after-comment:block:^#[*]+\n\n    Allows commenting like:\n\n        #*****\n        #\n        # Important topics here!\n        #\n        #*****\n        or\n        #* Headers *#\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\nMake sure to have one blank space after ``#`` comment character.\nConfigured regex for block comment should take into account the first character is ``#``.\n\nExample::\n\n    #bad\n    # good\n    ### good block\n\nConfiguration example::\n\n    robocop --configure missing-space-after-comment:block:^#[*]+\n\n    Allows commenting like:\n\n        #*****\n        #\n        # Important topics here!\n        #\n        #*****\n        or\n        #* Headers *#\n\n",
                                "markdown": "\nMake sure to have one blank space after ``#`` comment character.\nConfigured regex for block comment should take into account the first character is ``#``.\n\nExample::\n\n    #bad\n    # good\n    ### good block\n\nConfiguration example::\n\n    robocop --configure missing-space-after-comment:block:^#[*]+\n\n    Allows commenting like:\n\n        #*****\n        #\n        # Important topics here!\n        #\n        #*****\n        or\n        #* Headers *#\n\n"
                            }
                        },
                        {
                            "id": "0704",
                            "name": "ignored-data",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#ignored-data",
                            "shortDescription": {
                                "text": "Ignored data found in file"
                            },
                            "fullDescription": {
                                "text": "\nAll lines before first test data section\n(`ref <https://robotframework.org/robotframework/latest/RobotFrameworkUserGuide.html#test-data-sections>`_)\nare ignored. It's recommended to add ``*** Comments ***`` section header for lines that should be ignored.\n\nMissing section header::\n\n    Resource   file.resource  # it looks like *** Settings *** but section header is missing - line is ignored\n\n    *** Keywords ***\n    Keyword Name\n       No Operation\n\nComment lines that should be inside ``*** Comments ***``::\n\n    Deprecated Test\n        Keyword\n        Keyword 2\n\n    *** Test Cases ***\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\nAll lines before first test data section\n(`ref <https://robotframework.org/robotframework/latest/RobotFrameworkUserGuide.html#test-data-sections>`_)\nare ignored. It's recommended to add ``*** Comments ***`` section header for lines that should be ignored.\n\nMissing section header::\n\n    Resource   file.resource  # it looks like *** Settings *** but section header is missing - line is ignored\n\n    *** Keywords ***\n    Keyword Name\n       No Operation\n\nComment lines that should be inside ``*** Comments ***``::\n\n    Deprecated Test\n        Keyword\n        Keyword 2\n\n    *** Test Cases ***\n\n",
                                "markdown": "\nAll lines before first test data section\n(`ref <https://robotframework.org/robotframework/latest/RobotFrameworkUserGuide.html#test-data-sections>`_)\nare ignored. It's recommended to add ``*** Comments ***`` section header for lines that should be ignored.\n\nMissing section header::\n\n    Resource   file.resource  # it looks like *** Settings *** but section header is missing - line is ignored\n\n    *** Keywords ***\n    Keyword Name\n       No Operation\n\nComment lines that should be inside ``*** Comments ***``::\n\n    Deprecated Test\n        Keyword\n        Keyword 2\n\n    *** Test Cases ***\n\n"
                            }
                        },
                        {
                            "id": "0705",
                            "name": "bom-encoding-in-file",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#bom-encoding-in-file",
                            "shortDescription": {
                                "text": "This file contains BOM (Byte Order Mark) encoding not supported by Robot Framework"
                            },
                            "fullDescription": {
                                "text": "\nSome code editors can save Robot file using BOM encoding. Ensure that file is saved in UTF-8 encoding.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\nSome code editors can save Robot file using BOM encoding. Ensure that file is saved in UTF-8 encoding.\n",
                                "markdown": "\nSome code editors can save Robot file using BOM encoding. Ensure that file is saved in UTF-8 encoding.\n"
                            }
                        },
                        {
                            "id": "0801",
                            "name": "duplicated-test-case",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#duplicated-test-case",
                            "shortDescription": {
                                "text": "Multiple test cases with name '{{ name }}' (first occurrence in line {{ first_occurrence_line }})"
                            },
                            "fullDescription": {
                                "text": "\nIt is not allowed to reuse the same name of the test case within the same suite in Robot Framework. \nName matching is case-insensitive and ignores spaces and underscore characters.\nDuplicated test cases example::\n\n    *** Test Cases ***\n    Test with name\n        No Operation\n\n    test_with Name  # it is a duplicate of 'Test with name'\n        No Operation\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "\nIt is not allowed to reuse the same name of the test case within the same suite in Robot Framework. \nName matching is case-insensitive and ignores spaces and underscore characters.\nDuplicated test cases example::\n\n    *** Test Cases ***\n    Test with name\n        No Operation\n\n    test_with Name  # it is a duplicate of 'Test with name'\n        No Operation\n",
                                "markdown": "\nIt is not allowed to reuse the same name of the test case within the same suite in Robot Framework. \nName matching is case-insensitive and ignores spaces and underscore characters.\nDuplicated test cases example::\n\n    *** Test Cases ***\n    Test with name\n        No Operation\n\n    test_with Name  # it is a duplicate of 'Test with name'\n        No Operation\n"
                            }
                        },
                        {
                            "id": "0802",
                            "name": "duplicated-keyword",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#duplicated-keyword",
                            "shortDescription": {
                                "text": "Multiple keywords with name '{{ name }}' (first occurrence in line {{ first_occurrence_line }})"
                            },
                            "fullDescription": {
                                "text": "\nDo not define keywords with the same name inside the same file. Name matching is case-insensitive and \nignores spaces and underscore characters.\nDuplicated keyword names example::\n\n    *** Keywords ***\n    Keyword\n        No Operation\n\n    keyword\n        No Operation\n\n    K_eywor d\n        No Operation\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "\nDo not define keywords with the same name inside the same file. Name matching is case-insensitive and \nignores spaces and underscore characters.\nDuplicated keyword names example::\n\n    *** Keywords ***\n    Keyword\n        No Operation\n\n    keyword\n        No Operation\n\n    K_eywor d\n        No Operation\n\n",
                                "markdown": "\nDo not define keywords with the same name inside the same file. Name matching is case-insensitive and \nignores spaces and underscore characters.\nDuplicated keyword names example::\n\n    *** Keywords ***\n    Keyword\n        No Operation\n\n    keyword\n        No Operation\n\n    K_eywor d\n        No Operation\n\n"
                            }
                        },
                        {
                            "id": "0803",
                            "name": "duplicated-variable",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#duplicated-variable",
                            "shortDescription": {
                                "text": "Multiple variables with name '{{ name }}' in Variables section (first occurrence in line {{ first_occurrence_line }}). Note that Robot Framework is case-insensitive"
                            },
                            "fullDescription": {
                                "text": "\nVariable names in Robot Framework are case-insensitive and ignore spaces and underscores. Following variables \nare duplicates::\n\n    *** Variables ***\n    ${variable}    1\n    ${VARIAble}    a\n    @{variable}    a  b\n    ${v ariabl e}  c\n    ${v_ariable}   d\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "\nVariable names in Robot Framework are case-insensitive and ignore spaces and underscores. Following variables \nare duplicates::\n\n    *** Variables ***\n    ${variable}    1\n    ${VARIAble}    a\n    @{variable}    a  b\n    ${v ariabl e}  c\n    ${v_ariable}   d\n\n",
                                "markdown": "\nVariable names in Robot Framework are case-insensitive and ignore spaces and underscores. Following variables \nare duplicates::\n\n    *** Variables ***\n    ${variable}    1\n    ${VARIAble}    a\n    @{variable}    a  b\n    ${v ariabl e}  c\n    ${v_ariable}   d\n\n"
                            }
                        },
                        {
                            "id": "0804",
                            "name": "duplicated-resource",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#duplicated-resource",
                            "shortDescription": {
                                "text": "Multiple resource imports with path '{{ name }}' (first occurrence in line {{ first_occurrence_line }})"
                            },
                            "fullDescription": {
                                "text": ""
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "",
                                "markdown": ""
                            }
                        },
                        {
                            "id": "0805",
                            "name": "duplicated-library",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#duplicated-library",
                            "shortDescription": {
                                "text": "Multiple library imports with name '{{ name }}' and identical arguments (first occurrence in line {{ first_occurrence_line }})"
                            },
                            "fullDescription": {
                                "text": "\nIf you need to reimport library use alias::\n\n    *** Settings ***\n    Library  RobotLibrary\n    Library  RobotLibrary  AS  OtherRobotLibrary\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\nIf you need to reimport library use alias::\n\n    *** Settings ***\n    Library  RobotLibrary\n    Library  RobotLibrary  AS  OtherRobotLibrary\n\n",
                                "markdown": "\nIf you need to reimport library use alias::\n\n    *** Settings ***\n    Library  RobotLibrary\n    Library  RobotLibrary  AS  OtherRobotLibrary\n\n"
                            }
                        },
                        {
                            "id": "0806",
                            "name": "duplicated-metadata",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#duplicated-metadata",
                            "shortDescription": {
                                "text": "Duplicated metadata '{{ name }}' (first occurrence in line {{ first_occurrence_line }})"
                            },
                            "fullDescription": {
                                "text": ""
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "",
                                "markdown": ""
                            }
                        },
                        {
                            "id": "0807",
                            "name": "duplicated-variables-import",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#duplicated-variables-import",
                            "shortDescription": {
                                "text": "Duplicated variables import with path '{{ name }}' (first occurrence in line {{ first_occurrence_line }})"
                            },
                            "fullDescription": {
                                "text": ""
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "",
                                "markdown": ""
                            }
                        },
                        {
                            "id": "0808",
                            "name": "section-already-defined",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#section-already-defined",
                            "shortDescription": {
                                "text": "'{{ section_name }}' section header already defined in file (first occurrence in line {{ first_occurrence_line }})"
                            },
                            "fullDescription": {
                                "text": "\nDuplicated section in the file. Robot Framework will handle repeated sections but it is recommended to not \nduplicate them.\n\nExample::\n\n    *** Test Cases ***\n    My Test\n        Keyword\n\n    *** Keywords ***\n    Keyword\n        No Operation\n\n    *** Test Cases ***  # duplicate\n    Other Test\n        Keyword\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\nDuplicated section in the file. Robot Framework will handle repeated sections but it is recommended to not \nduplicate them.\n\nExample::\n\n    *** Test Cases ***\n    My Test\n        Keyword\n\n    *** Keywords ***\n    Keyword\n        No Operation\n\n    *** Test Cases ***  # duplicate\n    Other Test\n        Keyword\n\n",
                                "markdown": "\nDuplicated section in the file. Robot Framework will handle repeated sections but it is recommended to not \nduplicate them.\n\nExample::\n\n    *** Test Cases ***\n    My Test\n        Keyword\n\n    *** Keywords ***\n    Keyword\n        No Operation\n\n    *** Test Cases ***  # duplicate\n    Other Test\n        Keyword\n\n"
                            }
                        },
                        {
                            "id": "0809",
                            "name": "section-out-of-order",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#section-out-of-order",
                            "shortDescription": {
                                "text": "'{{ section_name }}' section header is defined in wrong order: {{ recommended_order }}"
                            },
                            "fullDescription": {
                                "text": "\nSections should be defined in order set by ``sections_order``\nparameter (default: ``settings,variables,testcases,keywords``).\n\nTo change the default order use following option::\n\n    robocop --configure section-out-of-order:sections_order:comma,separated,list,of,sections\n\nwhere section should be case-insensitive name from the list: comments, settings, variables, testcases, keywords. \nOrder of not configured sections is ignored.\n\nExample::\n\n    *** Settings ***\n\n    *** Keywords ***\n\n    *** Test Cases ***  # it will report issue because Test Cases should be defined before Keywords\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\nSections should be defined in order set by ``sections_order``\nparameter (default: ``settings,variables,testcases,keywords``).\n\nTo change the default order use following option::\n\n    robocop --configure section-out-of-order:sections_order:comma,separated,list,of,sections\n\nwhere section should be case-insensitive name from the list: comments, settings, variables, testcases, keywords. \nOrder of not configured sections is ignored.\n\nExample::\n\n    *** Settings ***\n\n    *** Keywords ***\n\n    *** Test Cases ***  # it will report issue because Test Cases should be defined before Keywords\n\n",
                                "markdown": "\nSections should be defined in order set by ``sections_order``\nparameter (default: ``settings,variables,testcases,keywords``).\n\nTo change the default order use following option::\n\n    robocop --configure section-out-of-order:sections_order:comma,separated,list,of,sections\n\nwhere section should be case-insensitive name from the list: comments, settings, variables, testcases, keywords. \nOrder of not configured sections is ignored.\n\nExample::\n\n    *** Settings ***\n\n    *** Keywords ***\n\n    *** Test Cases ***  # it will report issue because Test Cases should be defined before Keywords\n\n"
                            }
                        },
                        {
                            "id": "0810",
                            "name": "both-tests-and-tasks",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#both-tests-and-tasks",
                            "shortDescription": {
                                "text": "Both Task(s) and Test Case(s) section headers defined in file"
                            },
                            "fullDescription": {
                                "text": "\nThe file contains both ``*** Test Cases ***`` and ``*** Tasks ***`` sections. Use only one of them. ::\n\n    *** Test Cases ***\n\n    *** Tasks ***\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "\nThe file contains both ``*** Test Cases ***`` and ``*** Tasks ***`` sections. Use only one of them. ::\n\n    *** Test Cases ***\n\n    *** Tasks ***\n\n",
                                "markdown": "\nThe file contains both ``*** Test Cases ***`` and ``*** Tasks ***`` sections. Use only one of them. ::\n\n    *** Test Cases ***\n\n    *** Tasks ***\n\n"
                            }
                        },
                        {
                            "id": "0811",
                            "name": "duplicated-argument-name",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#duplicated-argument-name",
                            "shortDescription": {
                                "text": "Argument name '{{ argument_name }}' is already used"
                            },
                            "fullDescription": {
                                "text": "\nVariable names in Robot Framework are case-insensitive and ignores spaces and underscores. Following arguments \nare duplicates::\n\n    *** Keywords ***\n    Keyword\n        [Arguments]    ${var}  ${VAR}  ${v_ar}  ${v ar}\n        Other Keyword\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "\nVariable names in Robot Framework are case-insensitive and ignores spaces and underscores. Following arguments \nare duplicates::\n\n    *** Keywords ***\n    Keyword\n        [Arguments]    ${var}  ${VAR}  ${v_ar}  ${v ar}\n        Other Keyword\n\n",
                                "markdown": "\nVariable names in Robot Framework are case-insensitive and ignores spaces and underscores. Following arguments \nare duplicates::\n\n    *** Keywords ***\n    Keyword\n        [Arguments]    ${var}  ${VAR}  ${v_ar}  ${v ar}\n        Other Keyword\n\n"
                            }
                        },
                        {
                            "id": "0812",
                            "name": "duplicated-assigned-var-name",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#duplicated-assigned-var-name",
                            "shortDescription": {
                                "text": "Assigned variable name '{{ variable_name }}' is already used"
                            },
                            "fullDescription": {
                                "text": "\nVariable names in Robot Framework are case-insensitive and ignores spaces and underscores. Following variables \nare duplicates::\n\n    *** Test Cases ***\n    Test\n        ${var}  ${VAR}  ${v_ar}  ${v ar}  Keyword\n\nIt is possible to use `${_}` to note that variable name is not important and will not be used::\n\n    *** Keywords ***\n    Get Middle Element\n        [Arguments]    ${list}\n        ${_}    ${middle}    ${_}    Split List    ${list}\n        RETURN    ${middle}\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "note"
                            },
                            "help": {
                                "text": "\nVariable names in Robot Framework are case-insensitive and ignores spaces and underscores. Following variables \nare duplicates::\n\n    *** Test Cases ***\n    Test\n        ${var}  ${VAR}  ${v_ar}  ${v ar}  Keyword\n\nIt is possible to use `${_}` to note that variable name is not important and will not be used::\n\n    *** Keywords ***\n    Get Middle Element\n        [Arguments]    ${list}\n        ${_}    ${middle}    ${_}    Split List    ${list}\n        RETURN    ${middle}\n\n",
                                "markdown": "\nVariable names in Robot Framework are case-insensitive and ignores spaces and underscores. Following variables \nare duplicates::\n\n    *** Test Cases ***\n    Test\n        ${var}  ${VAR}  ${v_ar}  ${v ar}  Keyword\n\nIt is possible to use `${_}` to note that variable name is not important and will not be used::\n\n    *** Keywords ***\n    Get Middle Element\n        [Arguments]    ${list}\n        ${_}    ${middle}    ${_}    Split List    ${list}\n        RETURN    ${middle}\n\n"
                            }
                        },
                        {
                            "id": "0813",
                            "name": "duplicated-setting",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#duplicated-setting",
                            "shortDescription": {
                                "text": "{{ error_msg }}"
                            },
                            "fullDescription": {
                                "text": "\nSome settings can be used only once in a file. Only the first value is used.\nExample::\n\n    *** Settings ***\n    Force Tags        F1\n    Force Tags        F2  # this setting will be ignored\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\nSome settings can be used only once in a file. Only the first value is used.\nExample::\n\n    *** Settings ***\n    Force Tags        F1\n    Force Tags        F2  # this setting will be ignored\n\n",
                                "markdown": "\nSome settings can be used only once in a file. Only the first value is used.\nExample::\n\n    *** Settings ***\n    Force Tags        F1\n    Force Tags        F2  # this setting will be ignored\n\n"
                            }
                        },
                        {
                            "id": "0901",
                            "name": "keyword-after-return",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#keyword-after-return",
                            "shortDescription": {
                                "text": "{{ error_msg }}"
                            },
                            "fullDescription": {
                                "text": "\nTo improve readability use ``[Return]`` setting at the end of the keyword. If you want to return immediately\nfrom the keyword, use ``RETURN`` statement instead. ``[Return]`` does not return from the keyword but only\nsets the values that will be returned at the end of the keyword.\n\nBad::\n\n    Keyword\n        Step\n        [Return]    ${variable}\n        ${variable}    Other Step\n\nGood::\n\n    Keyword\n        Step\n        ${variable}    Other Step\n        [Return]    ${variable}\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\nTo improve readability use ``[Return]`` setting at the end of the keyword. If you want to return immediately\nfrom the keyword, use ``RETURN`` statement instead. ``[Return]`` does not return from the keyword but only\nsets the values that will be returned at the end of the keyword.\n\nBad::\n\n    Keyword\n        Step\n        [Return]    ${variable}\n        ${variable}    Other Step\n\nGood::\n\n    Keyword\n        Step\n        ${variable}    Other Step\n        [Return]    ${variable}\n\n",
                                "markdown": "\nTo improve readability use ``[Return]`` setting at the end of the keyword. If you want to return immediately\nfrom the keyword, use ``RETURN`` statement instead. ``[Return]`` does not return from the keyword but only\nsets the values that will be returned at the end of the keyword.\n\nBad::\n\n    Keyword\n        Step\n        [Return]    ${variable}\n        ${variable}    Other Step\n\nGood::\n\n    Keyword\n        Step\n        ${variable}    Other Step\n        [Return]    ${variable}\n\n"
                            }
                        },
                        {
                            "id": "0903",
                            "name": "empty-return",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#empty-return",
                            "shortDescription": {
                                "text": "[Return] is empty"
                            },
                            "fullDescription": {
                                "text": "\n``[Return]`` statement is used to define variables returned from keyword. If you don't return anything from\nkeyword,  don't use ``[Return]``.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\n``[Return]`` statement is used to define variables returned from keyword. If you don't return anything from\nkeyword,  don't use ``[Return]``.\n",
                                "markdown": "\n``[Return]`` statement is used to define variables returned from keyword. If you don't return anything from\nkeyword,  don't use ``[Return]``.\n"
                            }
                        },
                        {
                            "id": "0909",
                            "name": "inconsistent-assignment",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#inconsistent-assignment",
                            "shortDescription": {
                                "text": "The assignment sign is not consistent within the file. Expected '{{ expected_sign }}' but got '{{ actual_sign }}' instead"
                            },
                            "fullDescription": {
                                "text": "\nUse only one type of assignment sign in a file.\n\nExample of rule violation::\n\n    *** Keywords ***\n    Keyword\n        ${var} =  Other Keyword\n        No Operation\n\n    Keyword 2\n        No Operation\n        ${var}  ${var2}  Some Keyword  # this assignment doesn't use equal sign while the previous one uses ' ='\n\nBy default Robocop looks for most popular assignment sign in the file. It is possible to define expected\nassignment sign by running::\n\n    robocop --configure inconsistent-assignment:assignment_sign_type:equal_sign\n\nYou can choose between following signs: 'autodetect' (default), 'none', 'equal_sign' (``=``) or\nspace_and_equal_sign (`` =``).\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\nUse only one type of assignment sign in a file.\n\nExample of rule violation::\n\n    *** Keywords ***\n    Keyword\n        ${var} =  Other Keyword\n        No Operation\n\n    Keyword 2\n        No Operation\n        ${var}  ${var2}  Some Keyword  # this assignment doesn't use equal sign while the previous one uses ' ='\n\nBy default Robocop looks for most popular assignment sign in the file. It is possible to define expected\nassignment sign by running::\n\n    robocop --configure inconsistent-assignment:assignment_sign_type:equal_sign\n\nYou can choose between following signs: 'autodetect' (default), 'none', 'equal_sign' (``=``) or\nspace_and_equal_sign (`` =``).\n\n",
                                "markdown": "\nUse only one type of assignment sign in a file.\n\nExample of rule violation::\n\n    *** Keywords ***\n    Keyword\n        ${var} =  Other Keyword\n        No Operation\n\n    Keyword 2\n        No Operation\n        ${var}  ${var2}  Some Keyword  # this assignment doesn't use equal sign while the previous one uses ' ='\n\nBy default Robocop looks for most popular assignment sign in the file. It is possible to define expected\nassignment sign by running::\n\n    robocop --configure inconsistent-assignment:assignment_sign_type:equal_sign\n\nYou can choose between following signs: 'autodetect' (default), 'none', 'equal_sign' (``=``) or\nspace_and_equal_sign (`` =``).\n\n"
                            }
                        },
                        {
                            "id": "0910",
                            "name": "inconsistent-assignment-in-variables",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#inconsistent-assignment-in-variables",
                            "shortDescription": {
                                "text": "The assignment sign is not consistent inside the variables section. Expected '{{ expected_sign }}' but got '{{ actual_sign }}' instead"
                            },
                            "fullDescription": {
                                "text": "\nUse one type of assignment sign in Variables section.\n\nExample of rule violation::\n\n    *** Variables ***\n    ${var} =    1\n    ${var2}=    2\n    ${var3} =   3\n    ${var4}     a\n    ${var5}     b\n\nBy default, Robocop looks for the most popular assignment sign in the file. It is possible to define expected\nassignment sign by running::\n\n    robocop --configure inconsistent-assignment-in-variables:assignment_sign_type:equal_sign\n\nYou can choose between following signs: 'autodetect' (default), 'none', 'equal_sign' (``=``) or\nspace_and_equal_sign (`` =``).\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\nUse one type of assignment sign in Variables section.\n\nExample of rule violation::\n\n    *** Variables ***\n    ${var} =    1\n    ${var2}=    2\n    ${var3} =   3\n    ${var4}     a\n    ${var5}     b\n\nBy default, Robocop looks for the most popular assignment sign in the file. It is possible to define expected\nassignment sign by running::\n\n    robocop --configure inconsistent-assignment-in-variables:assignment_sign_type:equal_sign\n\nYou can choose between following signs: 'autodetect' (default), 'none', 'equal_sign' (``=``) or\nspace_and_equal_sign (`` =``).\n\n",
                                "markdown": "\nUse one type of assignment sign in Variables section.\n\nExample of rule violation::\n\n    *** Variables ***\n    ${var} =    1\n    ${var2}=    2\n    ${var3} =   3\n    ${var4}     a\n    ${var5}     b\n\nBy default, Robocop looks for the most popular assignment sign in the file. It is possible to define expected\nassignment sign by running::\n\n    robocop --configure inconsistent-assignment-in-variables:assignment_sign_type:equal_sign\n\nYou can choose between following signs: 'autodetect' (default), 'none', 'equal_sign' (``=``) or\nspace_and_equal_sign (`` =``).\n\n"
                            }
                        },
                        {
                            "id": "0911",
                            "name": "wrong-import-order",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#wrong-import-order",
                            "shortDescription": {
                                "text": "BuiltIn library import '{{ builtin_import }}' should be placed before '{{ custom_import }}'"
                            },
                            "fullDescription": {
                                "text": "\nExample of rule violation::\n\n    *** Settings ***\n    Library    Collections\n    Library    CustomLibrary\n    Library    OperatingSystem  # BuiltIn library defined after custom CustomLibrary\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\nExample of rule violation::\n\n    *** Settings ***\n    Library    Collections\n    Library    CustomLibrary\n    Library    OperatingSystem  # BuiltIn library defined after custom CustomLibrary\n\n",
                                "markdown": "\nExample of rule violation::\n\n    *** Settings ***\n    Library    Collections\n    Library    CustomLibrary\n    Library    OperatingSystem  # BuiltIn library defined after custom CustomLibrary\n\n"
                            }
                        },
                        {
                            "id": "0912",
                            "name": "empty-variable",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#empty-variable",
                            "shortDescription": {
                                "text": "Use built-in variable {{ var_type }}{EMPTY} instead of leaving variable without value or using backslash"
                            },
                            "fullDescription": {
                                "text": "\nVariables with placeholder ${EMPTY} values are more explicit.\n\nExample of rule violation::\n\n    *** Variables ***\n    ${VAR_NO_VALUE}                   # missing value\n    ${VAR_WITH_EMPTY}       ${EMPTY}\n    @{MULTILINE_FIRST_EMPTY}\n    ...                               # missing value\n    ...  value\n    ${EMPTY_WITH_BACKSLASH}  \\       # used backslash\n\n    *** Keywords ***\n    Create Variables\n        VAR    ${var_no_value}  # missing value\n        VAR    ${var_with_empty}    ${EMPTY}\n\nYou can configure ``empty-variable`` rule to run only in ```*** Variables ***``` section or on\n``VAR`` statements using ``variable_source`` parameter.\n"
                            },
                            "defaultConfiguration": {
                                "level": "note"
                            },
                            "help": {
                                "text": "\nVariables with placeholder ${EMPTY} values are more explicit.\n\nExample of rule violation::\n\n    *** Variables ***\n    ${VAR_NO_VALUE}                   # missing value\n    ${VAR_WITH_EMPTY}       ${EMPTY}\n    @{MULTILINE_FIRST_EMPTY}\n    ...                               # missing value\n    ...  value\n    ${EMPTY_WITH_BACKSLASH}  \\       # used backslash\n\n    *** Keywords ***\n    Create Variables\n        VAR    ${var_no_value}  # missing value\n        VAR    ${var_with_empty}    ${EMPTY}\n\nYou can configure ``empty-variable`` rule to run only in ```*** Variables ***``` section or on\n``VAR`` statements using ``variable_source`` parameter.\n",
                                "markdown": "\nVariables with placeholder ${EMPTY} values are more explicit.\n\nExample of rule violation::\n\n    *** Variables ***\n    ${VAR_NO_VALUE}                   # missing value\n    ${VAR_WITH_EMPTY}       ${EMPTY}\n    @{MULTILINE_FIRST_EMPTY}\n    ...                               # missing value\n    ...  value\n    ${EMPTY_WITH_BACKSLASH}  \\       # used backslash\n\n    *** Keywords ***\n    Create Variables\n        VAR    ${var_no_value}  # missing value\n        VAR    ${var_with_empty}    ${EMPTY}\n\nYou can configure ``empty-variable`` rule to run only in ```*** Variables ***``` section or on\n``VAR`` statements using ``variable_source`` parameter.\n"
                            }
                        },
                        {
                            "id": "0913",
                            "name": "can-be-resource-file",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#can-be-resource-file",
                            "shortDescription": {
                                "text": "No tests in '{{ file_name }}' file, consider renaming to '{{ file_name_stem }}.resource'"
                            },
                            "fullDescription": {
                                "text": "\nIf the Robot file contains only keywords or variables, it's a good practice to use ``.resource`` extension.\n"
                            },
                            "defaultConfiguration": {
                                "level": "note"
                            },
                            "help": {
                                "text": "\nIf the Robot file contains only keywords or variables, it's a good practice to use ``.resource`` extension.\n",
                                "markdown": "\nIf the Robot file contains only keywords or variables, it's a good practice to use ``.resource`` extension.\n"
                            }
                        },
                        {
                            "id": "0914",
                            "name": "if-can-be-merged",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#if-can-be-merged",
                            "shortDescription": {
                                "text": "IF statement can be merged with previous IF (defined in line {{ line }})"
                            },
                            "fullDescription": {
                                "text": "\n``IF`` statement follows another ``IF`` with identical conditions. It can be possibly merged into one.\n\nExample of rule violation::\n\n    IF  ${var} == 4\n        Keyword\n    END\n    # comments are ignored\n    IF  ${var}  == 4\n        Keyword 2\n    END\n\n``IF`` statement is considered identical only if all branches have identical conditions.\n\nSimilar but not identical ``IF``::\n\n    IF  ${variable}\n        Keyword\n    ELSE\n        Other Keyword\n    END\n    IF  ${variable}\n        Keyword\n    END\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "note"
                            },
                            "help": {
                                "text": "\n``IF`` statement follows another ``IF`` with identical conditions. It can be possibly merged into one.\n\nExample of rule violation::\n\n    IF  ${var} == 4\n        Keyword\n    END\n    # comments are ignored\n    IF  ${var}  == 4\n        Keyword 2\n    END\n\n``IF`` statement is considered identical only if all branches have identical conditions.\n\nSimilar but not identical ``IF``::\n\n    IF  ${variable}\n        Keyword\n    ELSE\n        Other Keyword\n    END\n    IF  ${variable}\n        Keyword\n    END\n\n",
                                "markdown": "\n``IF`` statement follows another ``IF`` with identical conditions. It can be possibly merged into one.\n\nExample of rule violation::\n\n    IF  ${var} == 4\n        Keyword\n    END\n    # comments are ignored\n    IF  ${var}  == 4\n        Keyword 2\n    END\n\n``IF`` statement is considered identical only if all branches have identical conditions.\n\nSimilar but not identical ``IF``::\n\n    IF  ${variable}\n        Keyword\n    ELSE\n        Other Keyword\n    END\n    IF  ${variable}\n        Keyword\n    END\n\n"
                            }
                        },
                        {
                            "id": "0915",
                            "name": "statement-outside-loop",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#statement-outside-loop",
                            "shortDescription": {
                                "text": "{{ name }} {{ statement_type }} used outside a loop"
                            },
                            "fullDescription": {
                                "text": "\nFollowing keywords and statements should only be used inside loop (``WHILE`` or ``FOR``):\n    - ``Exit For Loop``\n    - ``Exit For Loop If``\n    - ``Continue For Loop``\n    - ``Continue For Loop If``\n    - ``CONTINUE``\n    - ``BREAK``\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "\nFollowing keywords and statements should only be used inside loop (``WHILE`` or ``FOR``):\n    - ``Exit For Loop``\n    - ``Exit For Loop If``\n    - ``Continue For Loop``\n    - ``Continue For Loop If``\n    - ``CONTINUE``\n    - ``BREAK``\n\n",
                                "markdown": "\nFollowing keywords and statements should only be used inside loop (``WHILE`` or ``FOR``):\n    - ``Exit For Loop``\n    - ``Exit For Loop If``\n    - ``Continue For Loop``\n    - ``Continue For Loop If``\n    - ``CONTINUE``\n    - ``BREAK``\n\n"
                            }
                        },
                        {
                            "id": "0916",
                            "name": "inline-if-can-be-used",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#inline-if-can-be-used",
                            "shortDescription": {
                                "text": "IF can be replaced with inline IF"
                            },
                            "fullDescription": {
                                "text": "\nShort and simple ``IF`` statements can be replaced with ``inline IF``.\n\nFollowing ``IF``::\n\n    IF    $condition\n        BREAK\n    END\n\ncan be replaced with::\n\n    IF    $condition    BREAK\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "note"
                            },
                            "help": {
                                "text": "\nShort and simple ``IF`` statements can be replaced with ``inline IF``.\n\nFollowing ``IF``::\n\n    IF    $condition\n        BREAK\n    END\n\ncan be replaced with::\n\n    IF    $condition    BREAK\n\n",
                                "markdown": "\nShort and simple ``IF`` statements can be replaced with ``inline IF``.\n\nFollowing ``IF``::\n\n    IF    $condition\n        BREAK\n    END\n\ncan be replaced with::\n\n    IF    $condition    BREAK\n\n"
                            }
                        },
                        {
                            "id": "0917",
                            "name": "unreachable-code",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#unreachable-code",
                            "shortDescription": {
                                "text": "Unreachable code after {{ statement }} statement"
                            },
                            "fullDescription": {
                                "text": "\nDetect the unreachable code after ``RETURN``, ``BREAK`` or ``CONTINUE`` statements.\n\nFor example::\n\n    Example Keyword\n        FOR    ${animal}    IN    cat    dog\n            IF    '${animal}' == 'cat'\n                CONTINUE\n                Log  ${animal}  # unreachable log\n            END\n            BREAK\n            Log    Unreachable log\n        END\n        RETURN\n        Log    Unreachable log\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\nDetect the unreachable code after ``RETURN``, ``BREAK`` or ``CONTINUE`` statements.\n\nFor example::\n\n    Example Keyword\n        FOR    ${animal}    IN    cat    dog\n            IF    '${animal}' == 'cat'\n                CONTINUE\n                Log  ${animal}  # unreachable log\n            END\n            BREAK\n            Log    Unreachable log\n        END\n        RETURN\n        Log    Unreachable log\n\n",
                                "markdown": "\nDetect the unreachable code after ``RETURN``, ``BREAK`` or ``CONTINUE`` statements.\n\nFor example::\n\n    Example Keyword\n        FOR    ${animal}    IN    cat    dog\n            IF    '${animal}' == 'cat'\n                CONTINUE\n                Log  ${animal}  # unreachable log\n            END\n            BREAK\n            Log    Unreachable log\n        END\n        RETURN\n        Log    Unreachable log\n\n"
                            }
                        },
                        {
                            "id": "0918",
                            "name": "multiline-inline-if",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#multiline-inline-if",
                            "shortDescription": {
                                "text": "Avoid splitting inline IF to multiple lines"
                            },
                            "fullDescription": {
                                "text": "\nIt's allowed to create ``inline IF`` that spans multiple lines, but it should be avoided,\nsince it decreases readability. Try to use normal ``IF``/``ELSE`` instead.\n\nBad::\n\n    IF  ${condition}  Log  hello\n    ...    ELSE       Log  hi!\n\nGood::\n\n    IF  ${condition}    Log  hello     ELSE    Log  hi!\n\nor also good::\n\n    IF  ${condition}\n        Log  hello\n    ELSE\n        Log  hi!\n    END\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\nIt's allowed to create ``inline IF`` that spans multiple lines, but it should be avoided,\nsince it decreases readability. Try to use normal ``IF``/``ELSE`` instead.\n\nBad::\n\n    IF  ${condition}  Log  hello\n    ...    ELSE       Log  hi!\n\nGood::\n\n    IF  ${condition}    Log  hello     ELSE    Log  hi!\n\nor also good::\n\n    IF  ${condition}\n        Log  hello\n    ELSE\n        Log  hi!\n    END\n",
                                "markdown": "\nIt's allowed to create ``inline IF`` that spans multiple lines, but it should be avoided,\nsince it decreases readability. Try to use normal ``IF``/``ELSE`` instead.\n\nBad::\n\n    IF  ${condition}  Log  hello\n    ...    ELSE       Log  hi!\n\nGood::\n\n    IF  ${condition}    Log  hello     ELSE    Log  hi!\n\nor also good::\n\n    IF  ${condition}\n        Log  hello\n    ELSE\n        Log  hi!\n    END\n"
                            }
                        },
                        {
                            "id": "0919",
                            "name": "unused-argument",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#unused-argument",
                            "shortDescription": {
                                "text": "Keyword argument '{{ name }}' is not used"
                            },
                            "fullDescription": {
                                "text": "\nKeyword argument was defined but not used::\n\n    *** Keywords ***\n    Keyword\n        [Arguments]    ${used}    ${not_used}  # will report ${not_used}\n        Log    ${used}\n        IF    $used\n            Log    Escaped syntax is supported.\n        END\n\n    Keyword with ${embedded} and ${not_used}  # will report ${not_used}\n        Log    ${embedded}\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\nKeyword argument was defined but not used::\n\n    *** Keywords ***\n    Keyword\n        [Arguments]    ${used}    ${not_used}  # will report ${not_used}\n        Log    ${used}\n        IF    $used\n            Log    Escaped syntax is supported.\n        END\n\n    Keyword with ${embedded} and ${not_used}  # will report ${not_used}\n        Log    ${embedded}\n\n",
                                "markdown": "\nKeyword argument was defined but not used::\n\n    *** Keywords ***\n    Keyword\n        [Arguments]    ${used}    ${not_used}  # will report ${not_used}\n        Log    ${used}\n        IF    $used\n            Log    Escaped syntax is supported.\n        END\n\n    Keyword with ${embedded} and ${not_used}  # will report ${not_used}\n        Log    ${embedded}\n\n"
                            }
                        },
                        {
                            "id": "0920",
                            "name": "unused-variable",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#unused-variable",
                            "shortDescription": {
                                "text": "Variable '{{ name }}' is assigned but not used"
                            },
                            "fullDescription": {
                                "text": "\nVariable was assigned but not used::\n\n    *** Keywords ***\n    Get Triangle Base Points\n        [Arguments]       ${triangle}\n        ${p1}    ${p2}    ${p3}    Get Triangle Points    ${triangle}\n        Log      Triangle base points are: ${p1} and ${p2}.\n        RETURN   ${p1}    ${p2}  # ${p3} is never used\n\nUse ``${_}`` variable name if you purposefully do not use variable::\n\n    *** Keywords ***\n    Process Value 10 Times\n        [Arguments]    ${value}\n        FOR    ${_}   IN RANGE    10\n            Process Value    ${value}\n        END\n\nNote that some keywords may use your local variables even if you don't pass them directly. For example\nBuiltIn ``Replace Variables`` or any custom keyword that retrieves variables from local scope. In such case\nRobocop will still raise ``unused-variable`` even if variable is used.\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "note"
                            },
                            "help": {
                                "text": "\nVariable was assigned but not used::\n\n    *** Keywords ***\n    Get Triangle Base Points\n        [Arguments]       ${triangle}\n        ${p1}    ${p2}    ${p3}    Get Triangle Points    ${triangle}\n        Log      Triangle base points are: ${p1} and ${p2}.\n        RETURN   ${p1}    ${p2}  # ${p3} is never used\n\nUse ``${_}`` variable name if you purposefully do not use variable::\n\n    *** Keywords ***\n    Process Value 10 Times\n        [Arguments]    ${value}\n        FOR    ${_}   IN RANGE    10\n            Process Value    ${value}\n        END\n\nNote that some keywords may use your local variables even if you don't pass them directly. For example\nBuiltIn ``Replace Variables`` or any custom keyword that retrieves variables from local scope. In such case\nRobocop will still raise ``unused-variable`` even if variable is used.\n\n",
                                "markdown": "\nVariable was assigned but not used::\n\n    *** Keywords ***\n    Get Triangle Base Points\n        [Arguments]       ${triangle}\n        ${p1}    ${p2}    ${p3}    Get Triangle Points    ${triangle}\n        Log      Triangle base points are: ${p1} and ${p2}.\n        RETURN   ${p1}    ${p2}  # ${p3} is never used\n\nUse ``${_}`` variable name if you purposefully do not use variable::\n\n    *** Keywords ***\n    Process Value 10 Times\n        [Arguments]    ${value}\n        FOR    ${_}   IN RANGE    10\n            Process Value    ${value}\n        END\n\nNote that some keywords may use your local variables even if you don't pass them directly. For example\nBuiltIn ``Replace Variables`` or any custom keyword that retrieves variables from local scope. In such case\nRobocop will still raise ``unused-variable`` even if variable is used.\n\n"
                            }
                        },
                        {
                            "id": "0921",
                            "name": "argument-overwritten-before-usage",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#argument-overwritten-before-usage",
                            "shortDescription": {
                                "text": "Keyword argument '{{ name }}' is overwritten before usage"
                            },
                            "fullDescription": {
                                "text": "\nKeyword argument was overwritten before it is used::\n\n    *** Keywords ***\n    Overwritten Argument\n        [Arguments]    ${overwritten}  # we do not use ${overwritten} value at all\n        ${overwritten}    Set Variable    value  # we only overwrite it\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\nKeyword argument was overwritten before it is used::\n\n    *** Keywords ***\n    Overwritten Argument\n        [Arguments]    ${overwritten}  # we do not use ${overwritten} value at all\n        ${overwritten}    Set Variable    value  # we only overwrite it\n\n",
                                "markdown": "\nKeyword argument was overwritten before it is used::\n\n    *** Keywords ***\n    Overwritten Argument\n        [Arguments]    ${overwritten}  # we do not use ${overwritten} value at all\n        ${overwritten}    Set Variable    value  # we only overwrite it\n\n"
                            }
                        },
                        {
                            "id": "0922",
                            "name": "variable-overwritten-before-usage",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#variable-overwritten-before-usage",
                            "shortDescription": {
                                "text": "Local variable '{{ name }}' is overwritten before usage"
                            },
                            "fullDescription": {
                                "text": "\nLocal variable in Keyword, Test Case or Task is overwritten before it is used::\n\n    *** Keywords ***\n    Overwritten Variable\n        ${value}    Keyword\n        ${value}    Keyword\n\nIn case the value of the variable is not important, it is possible to use ``${_}`` name::\n\n    *** Test Cases ***\n    Call keyword and ignore some return values\n        ${_}    ${item}    Unpack List    @{LIST}\n        FOR    ${_}    IN RANGE  10\n            Log    Run this code 10 times.\n        END\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\nLocal variable in Keyword, Test Case or Task is overwritten before it is used::\n\n    *** Keywords ***\n    Overwritten Variable\n        ${value}    Keyword\n        ${value}    Keyword\n\nIn case the value of the variable is not important, it is possible to use ``${_}`` name::\n\n    *** Test Cases ***\n    Call keyword and ignore some return values\n        ${_}    ${item}    Unpack List    @{LIST}\n        FOR    ${_}    IN RANGE  10\n            Log    Run this code 10 times.\n        END\n\n",
                                "markdown": "\nLocal variable in Keyword, Test Case or Task is overwritten before it is used::\n\n    *** Keywords ***\n    Overwritten Variable\n        ${value}    Keyword\n        ${value}    Keyword\n\nIn case the value of the variable is not important, it is possible to use ``${_}`` name::\n\n    *** Test Cases ***\n    Call keyword and ignore some return values\n        ${_}    ${item}    Unpack List    @{LIST}\n        FOR    ${_}    IN RANGE  10\n            Log    Run this code 10 times.\n        END\n\n"
                            }
                        },
                        {
                            "id": "0924",
                            "name": "expression-can-be-simplified",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#expression-can-be-simplified",
                            "shortDescription": {
                                "text": "'{{ block_name }}' condition can be simplified"
                            },
                            "fullDescription": {
                                "text": "\nEvaluated expression can be simplified. For example::\n\n    *** Keywords ***\n    Click On Element\n        [Arguments]    ${locator}\n        IF    ${is_element_visible}==${TRUE}    RETURN\n        ${is_element_enabled}    Set Variable    ${TRUE}\n        WHILE    ${is_element_enabled} != ${TRUE}\n            ${is_element_enabled}    Get Element Status    ${locator}\n        END\n        Click    ${locator}\n\ncan be rewritten to::\n\n    *** Keywords ***\n    Click On Element\n        [Arguments]    ${locator}\n        IF    ${is_element_visible}    RETURN\n        ${is_element_enabled}    Set Variable    ${FALSE}\n        WHILE    not ${is_element_enabled}\n            ${is_element_enabled}    Get Element Status    ${locator}\n        END\n        Click    ${locator}\n\nComparisons to empty sequences (lists, dicts, sets), empty string or ``0`` can be also simplified::\n\n    *** Test Cases ***\n    Check conditions\n        Should Be True     ${list} == []  # equivalent of 'not ${list}'\n        Should Be True     ${string} != \"\"  # equivalent of '${string}'\n        Should Be True     len(${sequence}))  # equivalent of '${sequence}'\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "note"
                            },
                            "help": {
                                "text": "\nEvaluated expression can be simplified. For example::\n\n    *** Keywords ***\n    Click On Element\n        [Arguments]    ${locator}\n        IF    ${is_element_visible}==${TRUE}    RETURN\n        ${is_element_enabled}    Set Variable    ${TRUE}\n        WHILE    ${is_element_enabled} != ${TRUE}\n            ${is_element_enabled}    Get Element Status    ${locator}\n        END\n        Click    ${locator}\n\ncan be rewritten to::\n\n    *** Keywords ***\n    Click On Element\n        [Arguments]    ${locator}\n        IF    ${is_element_visible}    RETURN\n        ${is_element_enabled}    Set Variable    ${FALSE}\n        WHILE    not ${is_element_enabled}\n            ${is_element_enabled}    Get Element Status    ${locator}\n        END\n        Click    ${locator}\n\nComparisons to empty sequences (lists, dicts, sets), empty string or ``0`` can be also simplified::\n\n    *** Test Cases ***\n    Check conditions\n        Should Be True     ${list} == []  # equivalent of 'not ${list}'\n        Should Be True     ${string} != \"\"  # equivalent of '${string}'\n        Should Be True     len(${sequence}))  # equivalent of '${sequence}'\n\n",
                                "markdown": "\nEvaluated expression can be simplified. For example::\n\n    *** Keywords ***\n    Click On Element\n        [Arguments]    ${locator}\n        IF    ${is_element_visible}==${TRUE}    RETURN\n        ${is_element_enabled}    Set Variable    ${TRUE}\n        WHILE    ${is_element_enabled} != ${TRUE}\n            ${is_element_enabled}    Get Element Status    ${locator}\n        END\n        Click    ${locator}\n\ncan be rewritten to::\n\n    *** Keywords ***\n    Click On Element\n        [Arguments]    ${locator}\n        IF    ${is_element_visible}    RETURN\n        ${is_element_enabled}    Set Variable    ${FALSE}\n        WHILE    not ${is_element_enabled}\n            ${is_element_enabled}    Get Element Status    ${locator}\n        END\n        Click    ${locator}\n\nComparisons to empty sequences (lists, dicts, sets), empty string or ``0`` can be also simplified::\n\n    *** Test Cases ***\n    Check conditions\n        Should Be True     ${list} == []  # equivalent of 'not ${list}'\n        Should Be True     ${string} != \"\"  # equivalent of '${string}'\n        Should Be True     len(${sequence}))  # equivalent of '${sequence}'\n\n"
                            }
                        },
                        {
                            "id": "0925",
                            "name": "misplaced-negative-condition",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#misplaced-negative-condition",
                            "shortDescription": {
                                "text": "'{{ block_name }}' condition '{{ original_condition }}' can be rewritten to '{{ proposed_condition }}'"
                            },
                            "fullDescription": {
                                "text": "\nPosition of not operator can be changed for better readability.\n\nFor example::\n\n    *** Keywords ***\n    Check Unmapped Codes\n        ${codes}    Get Codes From API\n        IF    not ${codes} is None\n            FOR    ${code}    IN    @{codes}\n                Validate Single Code    ${code}\n            END\n        ELSE\n            Fail    Did not receive codes from API.\n        END\n\nCan be rewritten to::\n\n    *** Keywords ***\n    Check Unmapped Codes\n        ${codes}    Get Codes From API\n        IF    ${codes} is not None\n            FOR    ${code}    IN    @{codes}\n                Validate Single Code    ${code}\n            END\n        ELSE\n            Fail    Did not receive codes from API.\n        END\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "note"
                            },
                            "help": {
                                "text": "\nPosition of not operator can be changed for better readability.\n\nFor example::\n\n    *** Keywords ***\n    Check Unmapped Codes\n        ${codes}    Get Codes From API\n        IF    not ${codes} is None\n            FOR    ${code}    IN    @{codes}\n                Validate Single Code    ${code}\n            END\n        ELSE\n            Fail    Did not receive codes from API.\n        END\n\nCan be rewritten to::\n\n    *** Keywords ***\n    Check Unmapped Codes\n        ${codes}    Get Codes From API\n        IF    ${codes} is not None\n            FOR    ${code}    IN    @{codes}\n                Validate Single Code    ${code}\n            END\n        ELSE\n            Fail    Did not receive codes from API.\n        END\n\n",
                                "markdown": "\nPosition of not operator can be changed for better readability.\n\nFor example::\n\n    *** Keywords ***\n    Check Unmapped Codes\n        ${codes}    Get Codes From API\n        IF    not ${codes} is None\n            FOR    ${code}    IN    @{codes}\n                Validate Single Code    ${code}\n            END\n        ELSE\n            Fail    Did not receive codes from API.\n        END\n\nCan be rewritten to::\n\n    *** Keywords ***\n    Check Unmapped Codes\n        ${codes}    Get Codes From API\n        IF    ${codes} is not None\n            FOR    ${code}    IN    @{codes}\n                Validate Single Code    ${code}\n            END\n        ELSE\n            Fail    Did not receive codes from API.\n        END\n\n"
                            }
                        },
                        {
                            "id": "0926",
                            "name": "builtin-imports-not-sorted",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#builtin-imports-not-sorted",
                            "shortDescription": {
                                "text": "BuiltIn library import '{{ builtin_import }}' should be placed before '{{ previous_builtin_import }}'"
                            },
                            "fullDescription": {
                                "text": "\nExample of rule violation::\n\n    *** Settings ***\n    Library    OperatingSystem\n    Library    Collections  # BuiltIn libraries imported not in alphabetical order\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\nExample of rule violation::\n\n    *** Settings ***\n    Library    OperatingSystem\n    Library    Collections  # BuiltIn libraries imported not in alphabetical order\n\n",
                                "markdown": "\nExample of rule violation::\n\n    *** Settings ***\n    Library    OperatingSystem\n    Library    Collections  # BuiltIn libraries imported not in alphabetical order\n\n"
                            }
                        },
                        {
                            "id": "0927",
                            "name": "test-case-section-out-of-order",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#test-case-section-out-of-order",
                            "shortDescription": {
                                "text": "'{{ section_name }}' is in wrong place of Test Case. Recommended order of elements in Test Cases: {{ recommended_order }}"
                            },
                            "fullDescription": {
                                "text": "\nSections should be defined in order set by ``sections_order``\nparameter (default: ``documentation,tags,timeout,setup,template,keyword,teardown``).\n\nTo change the default order use following option::\n\n    robocop --configure test-case-section-out-of-order:sections_order:comma,separated,list,of,sections\n\nwhere section should be case-insensitive name from the list: \ndocumentation, tags, timeout, setup, template, keywords, teardown. \nOrder of not configured sections is ignored.\n\nExample of rule violation::\n\n    *** Test Cases ***\n    Keyword After Teardown\n        [Documentation]    This is test Documentation\n        [Tags]    tag1    tag2\n        [Teardown]    Log    abc\n        Keyword1\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\nSections should be defined in order set by ``sections_order``\nparameter (default: ``documentation,tags,timeout,setup,template,keyword,teardown``).\n\nTo change the default order use following option::\n\n    robocop --configure test-case-section-out-of-order:sections_order:comma,separated,list,of,sections\n\nwhere section should be case-insensitive name from the list: \ndocumentation, tags, timeout, setup, template, keywords, teardown. \nOrder of not configured sections is ignored.\n\nExample of rule violation::\n\n    *** Test Cases ***\n    Keyword After Teardown\n        [Documentation]    This is test Documentation\n        [Tags]    tag1    tag2\n        [Teardown]    Log    abc\n        Keyword1\n",
                                "markdown": "\nSections should be defined in order set by ``sections_order``\nparameter (default: ``documentation,tags,timeout,setup,template,keyword,teardown``).\n\nTo change the default order use following option::\n\n    robocop --configure test-case-section-out-of-order:sections_order:comma,separated,list,of,sections\n\nwhere section should be case-insensitive name from the list: \ndocumentation, tags, timeout, setup, template, keywords, teardown. \nOrder of not configured sections is ignored.\n\nExample of rule violation::\n\n    *** Test Cases ***\n    Keyword After Teardown\n        [Documentation]    This is test Documentation\n        [Tags]    tag1    tag2\n        [Teardown]    Log    abc\n        Keyword1\n"
                            }
                        },
                        {
                            "id": "0928",
                            "name": "keyword-section-out-of-order",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#keyword-section-out-of-order",
                            "shortDescription": {
                                "text": "'{{ section_name }}' is in wrong place of Keyword. Recommended order of elements in Keyword: {{ recommended_order }}"
                            },
                            "fullDescription": {
                                "text": "\nSections should be defined in order set by ``sections_order``\nparameter (default: ``documentation,tags,arguments,timeout,setup,keyword,teardown``).\n\nTo change the default order use following option::\n\n    robocop --configure keyword-section-out-of-order:sections_order:comma,separated,list,of,sections\n\nwhere section should be case-insensitive name from the list: \ndocumentation, tags, arguments, timeout, setup, keyword, teardown. \nOrder of not configured sections is ignored.\n\nExample of rule violation::\n\n    *** Keywords ***\n    Keyword After Teardown\n        [Documentation]    This is keyword Documentation\n        [Tags]    tag1    tag2\n        [Teardown]    Log    abc\n        Keyword1\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\nSections should be defined in order set by ``sections_order``\nparameter (default: ``documentation,tags,arguments,timeout,setup,keyword,teardown``).\n\nTo change the default order use following option::\n\n    robocop --configure keyword-section-out-of-order:sections_order:comma,separated,list,of,sections\n\nwhere section should be case-insensitive name from the list: \ndocumentation, tags, arguments, timeout, setup, keyword, teardown. \nOrder of not configured sections is ignored.\n\nExample of rule violation::\n\n    *** Keywords ***\n    Keyword After Teardown\n        [Documentation]    This is keyword Documentation\n        [Tags]    tag1    tag2\n        [Teardown]    Log    abc\n        Keyword1\n",
                                "markdown": "\nSections should be defined in order set by ``sections_order``\nparameter (default: ``documentation,tags,arguments,timeout,setup,keyword,teardown``).\n\nTo change the default order use following option::\n\n    robocop --configure keyword-section-out-of-order:sections_order:comma,separated,list,of,sections\n\nwhere section should be case-insensitive name from the list: \ndocumentation, tags, arguments, timeout, setup, keyword, teardown. \nOrder of not configured sections is ignored.\n\nExample of rule violation::\n\n    *** Keywords ***\n    Keyword After Teardown\n        [Documentation]    This is keyword Documentation\n        [Tags]    tag1    tag2\n        [Teardown]    Log    abc\n        Keyword1\n"
                            }
                        },
                        {
                            "id": "1001",
                            "name": "trailing-whitespace",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#trailing-whitespace",
                            "shortDescription": {
                                "text": "Trailing whitespace at the end of line"
                            },
                            "fullDescription": {
                                "text": ""
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "",
                                "markdown": ""
                            }
                        },
                        {
                            "id": "1002",
                            "name": "missing-trailing-blank-line",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#missing-trailing-blank-line",
                            "shortDescription": {
                                "text": "Missing trailing blank line at the end of file"
                            },
                            "fullDescription": {
                                "text": ""
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "",
                                "markdown": ""
                            }
                        },
                        {
                            "id": "1003",
                            "name": "empty-lines-between-sections",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#empty-lines-between-sections",
                            "shortDescription": {
                                "text": "Invalid number of empty lines between sections ({{ empty_lines }}/{{ allowed_empty_lines }})"
                            },
                            "fullDescription": {
                                "text": ""
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "",
                                "markdown": ""
                            }
                        },
                        {
                            "id": "1004",
                            "name": "empty-lines-between-test-cases",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#empty-lines-between-test-cases",
                            "shortDescription": {
                                "text": "Invalid number of empty lines between test cases ({{ empty_lines }}/{{ allowed_empty_lines }})"
                            },
                            "fullDescription": {
                                "text": ""
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "",
                                "markdown": ""
                            }
                        },
                        {
                            "id": "1005",
                            "name": "empty-lines-between-keywords",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#empty-lines-between-keywords",
                            "shortDescription": {
                                "text": "Invalid number of empty lines between keywords ({{ empty_lines }}/{{ allowed_empty_lines }})"
                            },
                            "fullDescription": {
                                "text": ""
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "",
                                "markdown": ""
                            }
                        },
                        {
                            "id": "1006",
                            "name": "mixed-tabs-and-spaces",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#mixed-tabs-and-spaces",
                            "shortDescription": {
                                "text": "Inconsistent use of tabs and spaces in file"
                            },
                            "fullDescription": {
                                "text": ""
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "",
                                "markdown": ""
                            }
                        },
                        {
                            "id": "1008",
                            "name": "bad-indent",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#bad-indent",
                            "shortDescription": {
                                "text": "{{ bad_indent_msg }}"
                            },
                            "fullDescription": {
                                "text": "\nLine is misaligned or indent is invalid.\n\nThis rule reports warning if the line is misaligned in the current block. Example of rule violation::\n\n    *** Keywords ***\n    Keyword\n        Keyword Call\n         Misaligned Keyword Call  # line is over-intended by one space\n        IF    $condition    RETURN\n       Keyword Call  # line is under-intended by two spaces\n\nThe correct indentation is determined by the most common indentation in the current block. Although,\nit allows for more flexible indentation by specifying the ``indent`` parameter for checking if the\nindentation is the multiple of ``indent`` spaces (default -1, which makes this parameter being ignored).\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\nLine is misaligned or indent is invalid.\n\nThis rule reports warning if the line is misaligned in the current block. Example of rule violation::\n\n    *** Keywords ***\n    Keyword\n        Keyword Call\n         Misaligned Keyword Call  # line is over-intended by one space\n        IF    $condition    RETURN\n       Keyword Call  # line is under-intended by two spaces\n\nThe correct indentation is determined by the most common indentation in the current block. Although,\nit allows for more flexible indentation by specifying the ``indent`` parameter for checking if the\nindentation is the multiple of ``indent`` spaces (default -1, which makes this parameter being ignored).\n",
                                "markdown": "\nLine is misaligned or indent is invalid.\n\nThis rule reports warning if the line is misaligned in the current block. Example of rule violation::\n\n    *** Keywords ***\n    Keyword\n        Keyword Call\n         Misaligned Keyword Call  # line is over-intended by one space\n        IF    $condition    RETURN\n       Keyword Call  # line is under-intended by two spaces\n\nThe correct indentation is determined by the most common indentation in the current block. Although,\nit allows for more flexible indentation by specifying the ``indent`` parameter for checking if the\nindentation is the multiple of ``indent`` spaces (default -1, which makes this parameter being ignored).\n"
                            }
                        },
                        {
                            "id": "1009",
                            "name": "empty-line-after-section",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#empty-line-after-section",
                            "shortDescription": {
                                "text": "Too many empty lines after '{{ section_name }}' section header ({{ empty_lines }}/{{ allowed_empty_lines }})"
                            },
                            "fullDescription": {
                                "text": "\nEmpty lines after the section header are not allowed by default. Example of rule violation::\n\n     *** Test Cases ***\n\n     Resource  file.resource\n\nIt can be configured using ``empty_lines`` parameter.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\nEmpty lines after the section header are not allowed by default. Example of rule violation::\n\n     *** Test Cases ***\n\n     Resource  file.resource\n\nIt can be configured using ``empty_lines`` parameter.\n",
                                "markdown": "\nEmpty lines after the section header are not allowed by default. Example of rule violation::\n\n     *** Test Cases ***\n\n     Resource  file.resource\n\nIt can be configured using ``empty_lines`` parameter.\n"
                            }
                        },
                        {
                            "id": "1010",
                            "name": "too-many-trailing-blank-lines",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#too-many-trailing-blank-lines",
                            "shortDescription": {
                                "text": "Too many blank lines at the end of file"
                            },
                            "fullDescription": {
                                "text": "There should be exactly one blank line at the end of the file"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "There should be exactly one blank line at the end of the file",
                                "markdown": "There should be exactly one blank line at the end of the file"
                            }
                        },
                        {
                            "id": "1011",
                            "name": "misaligned-continuation",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#misaligned-continuation",
                            "shortDescription": {
                                "text": "Continuation marker should be aligned with starting row"
                            },
                            "fullDescription": {
                                "text": "\nExample of rule violation::\n\n        Default Tags       default tag 1    default tag 2    default tag 3\n    ...                default tag 4    default tag 5\n\n        *** Test Cases ***\n        Example\n            Do X    first argument    second argument    third argument\n          ...    fourth argument    fifth argument    sixth argument\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\nExample of rule violation::\n\n        Default Tags       default tag 1    default tag 2    default tag 3\n    ...                default tag 4    default tag 5\n\n        *** Test Cases ***\n        Example\n            Do X    first argument    second argument    third argument\n          ...    fourth argument    fifth argument    sixth argument\n\n",
                                "markdown": "\nExample of rule violation::\n\n        Default Tags       default tag 1    default tag 2    default tag 3\n    ...                default tag 4    default tag 5\n\n        *** Test Cases ***\n        Example\n            Do X    first argument    second argument    third argument\n          ...    fourth argument    fifth argument    sixth argument\n\n"
                            }
                        },
                        {
                            "id": "1012",
                            "name": "consecutive-empty-lines",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#consecutive-empty-lines",
                            "shortDescription": {
                                "text": "Too many consecutive empty lines ({{ empty_lines }}/{{ allowed_empty_lines }})"
                            },
                            "fullDescription": {
                                "text": "\nExample of rule violation::\n\n    *** Variables ***\n    ${VAR}    value\n\n\n    ${VAR2}    value  # previous line will be reported with 2/1 consecutive lines\n\n\n    *** Keywords ***\n    Keyword\n        Step 1\n\n\n        Step 2  # previous line will be reported with 2/1 consecutive lines\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\nExample of rule violation::\n\n    *** Variables ***\n    ${VAR}    value\n\n\n    ${VAR2}    value  # previous line will be reported with 2/1 consecutive lines\n\n\n    *** Keywords ***\n    Keyword\n        Step 1\n\n\n        Step 2  # previous line will be reported with 2/1 consecutive lines\n\n",
                                "markdown": "\nExample of rule violation::\n\n    *** Variables ***\n    ${VAR}    value\n\n\n    ${VAR2}    value  # previous line will be reported with 2/1 consecutive lines\n\n\n    *** Keywords ***\n    Keyword\n        Step 1\n\n\n        Step 2  # previous line will be reported with 2/1 consecutive lines\n\n"
                            }
                        },
                        {
                            "id": "1013",
                            "name": "empty-lines-in-statement",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#empty-lines-in-statement",
                            "shortDescription": {
                                "text": "Multi-line statement with empty lines"
                            },
                            "fullDescription": {
                                "text": "\nExample of rule violation::\n\n     Keyword\n     ...  1\n     # empty line in-between multiline statement\n     ...  2\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\nExample of rule violation::\n\n     Keyword\n     ...  1\n     # empty line in-between multiline statement\n     ...  2\n\n",
                                "markdown": "\nExample of rule violation::\n\n     Keyword\n     ...  1\n     # empty line in-between multiline statement\n     ...  2\n\n"
                            }
                        },
                        {
                            "id": "1014",
                            "name": "variable-should-be-left-aligned",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#variable-should-be-left-aligned",
                            "shortDescription": {
                                "text": "Variable in Variable section should be left aligned"
                            },
                            "fullDescription": {
                                "text": "\nExample of rule violation::\n\n    *** Variables ***\n     ${VAR}  1\n      ${VAR2}  2\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "\nExample of rule violation::\n\n    *** Variables ***\n     ${VAR}  1\n      ${VAR2}  2\n\n",
                                "markdown": "\nExample of rule violation::\n\n    *** Variables ***\n     ${VAR}  1\n      ${VAR2}  2\n\n"
                            }
                        },
                        {
                            "id": "1015",
                            "name": "misaligned-continuation-row",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#misaligned-continuation-row",
                            "shortDescription": {
                                "text": "Each next continuation line should be aligned with the previous one"
                            },
                            "fullDescription": {
                                "text": "\nExample of rule violation::\n\n    *** Variable ***\n    ${VAR}    This is a long string.\n    ...       It has multiple sentences.\n    ...         And this line is misaligned with previous one.\n\n    *** Test Cases ***\n    My Test\n        My Keyword\n        ...    arg1\n        ...   arg2  # misaligned\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\nExample of rule violation::\n\n    *** Variable ***\n    ${VAR}    This is a long string.\n    ...       It has multiple sentences.\n    ...         And this line is misaligned with previous one.\n\n    *** Test Cases ***\n    My Test\n        My Keyword\n        ...    arg1\n        ...   arg2  # misaligned\n",
                                "markdown": "\nExample of rule violation::\n\n    *** Variable ***\n    ${VAR}    This is a long string.\n    ...       It has multiple sentences.\n    ...         And this line is misaligned with previous one.\n\n    *** Test Cases ***\n    My Test\n        My Keyword\n        ...    arg1\n        ...   arg2  # misaligned\n"
                            }
                        },
                        {
                            "id": "1016",
                            "name": "suite-setting-should-be-left-aligned",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#suite-setting-should-be-left-aligned",
                            "shortDescription": {
                                "text": "Setting in Settings section should be left aligned"
                            },
                            "fullDescription": {
                                "text": "\nExample of rule violation::\n\n    *** Settings ***\n        Library  Collections\n        Resource  data.resource\n        Variables  vars.robot\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "\nExample of rule violation::\n\n    *** Settings ***\n        Library  Collections\n        Resource  data.resource\n        Variables  vars.robot\n\n",
                                "markdown": "\nExample of rule violation::\n\n    *** Settings ***\n        Library  Collections\n        Resource  data.resource\n        Variables  vars.robot\n\n"
                            }
                        },
                        {
                            "id": "1017",
                            "name": "bad-block-indent",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#bad-block-indent",
                            "shortDescription": {
                                "text": "Indent expected. Provide 2 or more spaces of indentation for statements inside block"
                            },
                            "fullDescription": {
                                "text": "\nIf the indentation is less than two spaces than current block parent element\n(such as ``FOR``/``IF``/``WHILE``/``TRY`` header) the indentation is invalid and the rule reports an error::\n\n    *** Keywords ***\n    Some Keyword\n        FOR  ${elem}  IN  ${list}\n            Log  ${elem}  # this is fine\n       Log  stuff    # this is bad indent\n    # bad comment\n        END\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "\nIf the indentation is less than two spaces than current block parent element\n(such as ``FOR``/``IF``/``WHILE``/``TRY`` header) the indentation is invalid and the rule reports an error::\n\n    *** Keywords ***\n    Some Keyword\n        FOR  ${elem}  IN  ${list}\n            Log  ${elem}  # this is fine\n       Log  stuff    # this is bad indent\n    # bad comment\n        END\n",
                                "markdown": "\nIf the indentation is less than two spaces than current block parent element\n(such as ``FOR``/``IF``/``WHILE``/``TRY`` header) the indentation is invalid and the rule reports an error::\n\n    *** Keywords ***\n    Some Keyword\n        FOR  ${elem}  IN  ${list}\n            Log  ${elem}  # this is fine\n       Log  stuff    # this is bad indent\n    # bad comment\n        END\n"
                            }
                        },
                        {
                            "id": "1018",
                            "name": "first-argument-in-new-line",
                            "helpUri": "https://robocop.readthedocs.io/en/5.4.0/rules_list.html#first-argument-in-new-line",
                            "shortDescription": {
                                "text": "First argument: '{{ argument_name }}' should be placed on the same line as [Arguments] setting"
                            },
                            "fullDescription": {
                                "text": "\nExample of rule violation::\n\n    *** Keywords ***\n    Custom Keyword With Five Required Arguments\n    [Arguments]\n    ...    ${name}\n    ...    ${surname}\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "text": "\nExample of rule violation::\n\n    *** Keywords ***\n    Custom Keyword With Five Required Arguments\n    [Arguments]\n    ...    ${name}\n    ...    ${surname}\n\n",
                                "markdown": "\nExample of rule violation::\n\n    *** Keywords ***\n    Custom Keyword With Five Required Arguments\n    [Arguments]\n    ...    ${name}\n    ...    ${surname}\n\n"
                            }
                        }
                    ]
                }
            },
            "automationDetails": {
                "id": "robocop/"
            },
            "results": [
                {
                    "ruleId": "0203",
                    "level": "warning",
                    "message": {
                        "text": "Missing documentation in suite"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Keywords/CreateAnAccountKeywords.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 1,
                                    "endLine": 1,
                                    "startColumn": 1,
                                    "endColumn": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0913",
                    "level": "note",
                    "message": {
                        "text": "No tests in 'CreateAnAccountKeywords.robot' file, consider renaming to 'CreateAnAccountKeywords.resource'"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Keywords/CreateAnAccountKeywords.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 1,
                                    "endLine": 1,
                                    "startColumn": 1,
                                    "endColumn": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0911",
                    "level": "warning",
                    "message": {
                        "text": "BuiltIn library import 'OperatingSystem' should be placed before 'SeleniumLibrary'"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Keywords/CreateAnAccountKeywords.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 3,
                                    "endLine": 3,
                                    "startColumn": 19,
                                    "endColumn": 34
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0911",
                    "level": "warning",
                    "message": {
                        "text": "BuiltIn library import 'Collections' should be placed before 'SeleniumLibrary'"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Keywords/CreateAnAccountKeywords.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 4,
                                    "endLine": 4,
                                    "startColumn": 19,
                                    "endColumn": 30
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0926",
                    "level": "warning",
                    "message": {
                        "text": "BuiltIn library import 'Collections' should be placed before 'OperatingSystem'"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Keywords/CreateAnAccountKeywords.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 4,
                                    "endLine": 4,
                                    "startColumn": 19,
                                    "endColumn": 30
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0911",
                    "level": "warning",
                    "message": {
                        "text": "BuiltIn library import 'DateTime' should be placed before 'SeleniumLibrary'"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Keywords/CreateAnAccountKeywords.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 5,
                                    "endLine": 5,
                                    "startColumn": 19,
                                    "endColumn": 27
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0911",
                    "level": "warning",
                    "message": {
                        "text": "BuiltIn library import 'String' should be placed before 'SeleniumLibrary'"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Keywords/CreateAnAccountKeywords.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 6,
                                    "endLine": 6,
                                    "startColumn": 19,
                                    "endColumn": 25
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "1003",
                    "level": "warning",
                    "message": {
                        "text": "Invalid number of empty lines between sections (1/2)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Keywords/CreateAnAccountKeywords.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 9,
                                    "endLine": 9,
                                    "startColumn": 1,
                                    "endColumn": 56
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0201",
                    "level": "warning",
                    "message": {
                        "text": "Missing documentation in 'Enter Account Details' keyword"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Keywords/CreateAnAccountKeywords.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 11,
                                    "endLine": 11,
                                    "startColumn": 1,
                                    "endColumn": 22
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0201",
                    "level": "warning",
                    "message": {
                        "text": "Missing documentation in 'Enter Invalid Email' keyword"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Keywords/CreateAnAccountKeywords.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 18,
                                    "endLine": 18,
                                    "startColumn": 1,
                                    "endColumn": 20
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0201",
                    "level": "warning",
                    "message": {
                        "text": "Missing documentation in 'Submit Account Creation' keyword"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Keywords/CreateAnAccountKeywords.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 25,
                                    "endLine": 25,
                                    "startColumn": 1,
                                    "endColumn": 24
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0201",
                    "level": "warning",
                    "message": {
                        "text": "Missing documentation in 'Verify Error Message Is Displayed' keyword"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Keywords/CreateAnAccountKeywords.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 30,
                                    "endLine": 30,
                                    "startColumn": 1,
                                    "endColumn": 34
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "1010",
                    "level": "warning",
                    "message": {
                        "text": "Too many blank lines at the end of file"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Keywords/CreateAnAccountKeywords.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 34,
                                    "endLine": 34,
                                    "startColumn": 1,
                                    "endColumn": 2
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0203",
                    "level": "warning",
                    "message": {
                        "text": "Missing documentation in suite"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Keywords/LaunchApplication.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 1,
                                    "endLine": 1,
                                    "startColumn": 1,
                                    "endColumn": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0913",
                    "level": "note",
                    "message": {
                        "text": "No tests in 'LaunchApplication.robot' file, consider renaming to 'LaunchApplication.resource'"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Keywords/LaunchApplication.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 1,
                                    "endLine": 1,
                                    "startColumn": 1,
                                    "endColumn": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "1003",
                    "level": "warning",
                    "message": {
                        "text": "Invalid number of empty lines between sections (1/2)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Keywords/LaunchApplication.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 4,
                                    "endLine": 4,
                                    "startColumn": 1,
                                    "endColumn": 34
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0201",
                    "level": "warning",
                    "message": {
                        "text": "Missing documentation in 'Clear SUT To Initial State' keyword"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Keywords/LaunchApplication.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 13,
                                    "endLine": 13,
                                    "startColumn": 1,
                                    "endColumn": 27
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0203",
                    "level": "warning",
                    "message": {
                        "text": "Missing documentation in suite"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Keywords/SearchKeywords.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 1,
                                    "endLine": 1,
                                    "startColumn": 1,
                                    "endColumn": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0913",
                    "level": "note",
                    "message": {
                        "text": "No tests in 'SearchKeywords.robot' file, consider renaming to 'SearchKeywords.resource'"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Keywords/SearchKeywords.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 1,
                                    "endLine": 1,
                                    "startColumn": 1,
                                    "endColumn": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0911",
                    "level": "warning",
                    "message": {
                        "text": "BuiltIn library import 'OperatingSystem' should be placed before 'SeleniumLibrary'"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Keywords/SearchKeywords.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 3,
                                    "endLine": 3,
                                    "startColumn": 19,
                                    "endColumn": 34
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0911",
                    "level": "warning",
                    "message": {
                        "text": "BuiltIn library import 'Collections' should be placed before 'SeleniumLibrary'"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Keywords/SearchKeywords.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 4,
                                    "endLine": 4,
                                    "startColumn": 19,
                                    "endColumn": 30
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0926",
                    "level": "warning",
                    "message": {
                        "text": "BuiltIn library import 'Collections' should be placed before 'OperatingSystem'"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Keywords/SearchKeywords.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 4,
                                    "endLine": 4,
                                    "startColumn": 19,
                                    "endColumn": 30
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0911",
                    "level": "warning",
                    "message": {
                        "text": "BuiltIn library import 'DateTime' should be placed before 'SeleniumLibrary'"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Keywords/SearchKeywords.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 5,
                                    "endLine": 5,
                                    "startColumn": 19,
                                    "endColumn": 27
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0911",
                    "level": "warning",
                    "message": {
                        "text": "BuiltIn library import 'String' should be placed before 'SeleniumLibrary'"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Keywords/SearchKeywords.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 6,
                                    "endLine": 6,
                                    "startColumn": 19,
                                    "endColumn": 25
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "1003",
                    "level": "warning",
                    "message": {
                        "text": "Invalid number of empty lines between sections (1/2)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Keywords/SearchKeywords.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 9,
                                    "endLine": 9,
                                    "startColumn": 1,
                                    "endColumn": 47
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0201",
                    "level": "warning",
                    "message": {
                        "text": "Missing documentation in 'Search a Keyword' keyword"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Keywords/SearchKeywords.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 11,
                                    "endLine": 11,
                                    "startColumn": 1,
                                    "endColumn": 17
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0302",
                    "level": "warning",
                    "message": {
                        "text": "Keyword name 'Search a Keyword' does not follow case convention"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Keywords/SearchKeywords.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 11,
                                    "endLine": 11,
                                    "startColumn": 1,
                                    "endColumn": 17
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0201",
                    "level": "warning",
                    "message": {
                        "text": "Missing documentation in 'Verify Search Result Page is shown' keyword"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Keywords/SearchKeywords.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 16,
                                    "endLine": 16,
                                    "startColumn": 1,
                                    "endColumn": 35
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0302",
                    "level": "warning",
                    "message": {
                        "text": "Keyword name 'Verify Search Result Page is shown' does not follow case convention"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Keywords/SearchKeywords.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 16,
                                    "endLine": 16,
                                    "startColumn": 1,
                                    "endColumn": 35
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0203",
                    "level": "warning",
                    "message": {
                        "text": "Missing documentation in suite"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Objects/Locators/CreateAnAccountLocators.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 1,
                                    "endLine": 1,
                                    "startColumn": 1,
                                    "endColumn": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0913",
                    "level": "note",
                    "message": {
                        "text": "No tests in 'CreateAnAccountLocators.robot' file, consider renaming to 'CreateAnAccountLocators.resource'"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Objects/Locators/CreateAnAccountLocators.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 1,
                                    "endLine": 1,
                                    "startColumn": 1,
                                    "endColumn": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0309",
                    "level": "warning",
                    "message": {
                        "text": "Section variable '${SignInButton}' name should be uppercase"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Objects/Locators/CreateAnAccountLocators.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 2,
                                    "endLine": 2,
                                    "startColumn": 1,
                                    "endColumn": 16
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0309",
                    "level": "warning",
                    "message": {
                        "text": "Section variable '${EmailAddress}' name should be uppercase"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Objects/Locators/CreateAnAccountLocators.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 3,
                                    "endLine": 3,
                                    "startColumn": 1,
                                    "endColumn": 16
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0309",
                    "level": "warning",
                    "message": {
                        "text": "Section variable '${CreateAnAccountButton}' name should be uppercase"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Objects/Locators/CreateAnAccountLocators.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 4,
                                    "endLine": 4,
                                    "startColumn": 1,
                                    "endColumn": 25
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0309",
                    "level": "warning",
                    "message": {
                        "text": "Section variable '${Title}' name should be uppercase"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Objects/Locators/CreateAnAccountLocators.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 5,
                                    "endLine": 5,
                                    "startColumn": 1,
                                    "endColumn": 9
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0309",
                    "level": "warning",
                    "message": {
                        "text": "Section variable '${FirstName}' name should be uppercase"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Objects/Locators/CreateAnAccountLocators.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 6,
                                    "endLine": 6,
                                    "startColumn": 1,
                                    "endColumn": 13
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0309",
                    "level": "warning",
                    "message": {
                        "text": "Section variable '${LastName}' name should be uppercase"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Objects/Locators/CreateAnAccountLocators.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 7,
                                    "endLine": 7,
                                    "startColumn": 1,
                                    "endColumn": 12
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0309",
                    "level": "warning",
                    "message": {
                        "text": "Section variable '${Password}' name should be uppercase"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Objects/Locators/CreateAnAccountLocators.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 8,
                                    "endLine": 8,
                                    "startColumn": 1,
                                    "endColumn": 12
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0309",
                    "level": "warning",
                    "message": {
                        "text": "Section variable '${DOB_Day}' name should be uppercase"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Objects/Locators/CreateAnAccountLocators.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 9,
                                    "endLine": 9,
                                    "startColumn": 1,
                                    "endColumn": 11
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0309",
                    "level": "warning",
                    "message": {
                        "text": "Section variable '${DOB_Month}' name should be uppercase"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Objects/Locators/CreateAnAccountLocators.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 10,
                                    "endLine": 10,
                                    "startColumn": 1,
                                    "endColumn": 13
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0309",
                    "level": "warning",
                    "message": {
                        "text": "Section variable '${DOB_Year}' name should be uppercase"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Objects/Locators/CreateAnAccountLocators.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 11,
                                    "endLine": 11,
                                    "startColumn": 1,
                                    "endColumn": 12
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0309",
                    "level": "warning",
                    "message": {
                        "text": "Section variable '${NewsLetterSignup}' name should be uppercase"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Objects/Locators/CreateAnAccountLocators.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 12,
                                    "endLine": 12,
                                    "startColumn": 1,
                                    "endColumn": 20
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0309",
                    "level": "warning",
                    "message": {
                        "text": "Section variable '${SpecialOffer}' name should be uppercase"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Objects/Locators/CreateAnAccountLocators.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 13,
                                    "endLine": 13,
                                    "startColumn": 1,
                                    "endColumn": 16
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0309",
                    "level": "warning",
                    "message": {
                        "text": "Section variable '${Company}' name should be uppercase"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Objects/Locators/CreateAnAccountLocators.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 14,
                                    "endLine": 14,
                                    "startColumn": 1,
                                    "endColumn": 11
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0309",
                    "level": "warning",
                    "message": {
                        "text": "Section variable '${Address}' name should be uppercase"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Objects/Locators/CreateAnAccountLocators.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 15,
                                    "endLine": 15,
                                    "startColumn": 1,
                                    "endColumn": 11
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0309",
                    "level": "warning",
                    "message": {
                        "text": "Section variable '${Address2}' name should be uppercase"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Objects/Locators/CreateAnAccountLocators.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 16,
                                    "endLine": 16,
                                    "startColumn": 1,
                                    "endColumn": 12
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0309",
                    "level": "warning",
                    "message": {
                        "text": "Section variable '${City}' name should be uppercase"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Objects/Locators/CreateAnAccountLocators.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 17,
                                    "endLine": 17,
                                    "startColumn": 1,
                                    "endColumn": 8
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0309",
                    "level": "warning",
                    "message": {
                        "text": "Section variable '${State}' name should be uppercase"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Objects/Locators/CreateAnAccountLocators.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 18,
                                    "endLine": 18,
                                    "startColumn": 1,
                                    "endColumn": 9
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0309",
                    "level": "warning",
                    "message": {
                        "text": "Section variable '${ZipCode}' name should be uppercase"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Objects/Locators/CreateAnAccountLocators.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 19,
                                    "endLine": 19,
                                    "startColumn": 1,
                                    "endColumn": 11
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0309",
                    "level": "warning",
                    "message": {
                        "text": "Section variable '${AdditionalInformation}' name should be uppercase"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Objects/Locators/CreateAnAccountLocators.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 20,
                                    "endLine": 20,
                                    "startColumn": 1,
                                    "endColumn": 25
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0309",
                    "level": "warning",
                    "message": {
                        "text": "Section variable '${HomePhone}' name should be uppercase"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Objects/Locators/CreateAnAccountLocators.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 21,
                                    "endLine": 21,
                                    "startColumn": 1,
                                    "endColumn": 13
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0309",
                    "level": "warning",
                    "message": {
                        "text": "Section variable '${MobilePhone}' name should be uppercase"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Objects/Locators/CreateAnAccountLocators.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 22,
                                    "endLine": 22,
                                    "startColumn": 1,
                                    "endColumn": 15
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0309",
                    "level": "warning",
                    "message": {
                        "text": "Section variable '${AssignAnAddressAlias}' name should be uppercase"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Objects/Locators/CreateAnAccountLocators.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 23,
                                    "endLine": 23,
                                    "startColumn": 1,
                                    "endColumn": 24
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0309",
                    "level": "warning",
                    "message": {
                        "text": "Section variable '${Register}' name should be uppercase"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Objects/Locators/CreateAnAccountLocators.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 24,
                                    "endLine": 24,
                                    "startColumn": 1,
                                    "endColumn": 12
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0203",
                    "level": "warning",
                    "message": {
                        "text": "Missing documentation in suite"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Objects/Locators/SearchLocators.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 1,
                                    "endLine": 1,
                                    "startColumn": 1,
                                    "endColumn": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0913",
                    "level": "note",
                    "message": {
                        "text": "No tests in 'SearchLocators.robot' file, consider renaming to 'SearchLocators.resource'"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Objects/Locators/SearchLocators.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 1,
                                    "endLine": 1,
                                    "startColumn": 1,
                                    "endColumn": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0309",
                    "level": "warning",
                    "message": {
                        "text": "Section variable '${SearchQuery}' name should be uppercase"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Objects/Locators/SearchLocators.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 2,
                                    "endLine": 2,
                                    "startColumn": 1,
                                    "endColumn": 15
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0309",
                    "level": "warning",
                    "message": {
                        "text": "Section variable '${SearchSubmitButton}' name should be uppercase"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Objects/Locators/SearchLocators.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 3,
                                    "endLine": 3,
                                    "startColumn": 1,
                                    "endColumn": 22
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0309",
                    "level": "warning",
                    "message": {
                        "text": "Section variable '${SearchResultKeyword}' name should be uppercase"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "Objects/Locators/SearchLocators.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 4,
                                    "endLine": 4,
                                    "startColumn": 1,
                                    "endColumn": 23
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0203",
                    "level": "warning",
                    "message": {
                        "text": "Missing documentation in suite"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestData/CreateAnAccountData.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 1,
                                    "endLine": 1,
                                    "startColumn": 1,
                                    "endColumn": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0913",
                    "level": "note",
                    "message": {
                        "text": "No tests in 'CreateAnAccountData.robot' file, consider renaming to 'CreateAnAccountData.resource'"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestData/CreateAnAccountData.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 1,
                                    "endLine": 1,
                                    "startColumn": 1,
                                    "endColumn": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0309",
                    "level": "warning",
                    "message": {
                        "text": "Section variable '${FirstNameData}' name should be uppercase"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestData/CreateAnAccountData.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 2,
                                    "endLine": 2,
                                    "startColumn": 1,
                                    "endColumn": 17
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0309",
                    "level": "warning",
                    "message": {
                        "text": "Section variable '${LastNameData}' name should be uppercase"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestData/CreateAnAccountData.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 3,
                                    "endLine": 3,
                                    "startColumn": 1,
                                    "endColumn": 16
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0309",
                    "level": "warning",
                    "message": {
                        "text": "Section variable '${PasswordData}' name should be uppercase"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestData/CreateAnAccountData.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 4,
                                    "endLine": 4,
                                    "startColumn": 1,
                                    "endColumn": 16
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0309",
                    "level": "warning",
                    "message": {
                        "text": "Section variable '${DOB_DayData}' name should be uppercase"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestData/CreateAnAccountData.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 5,
                                    "endLine": 5,
                                    "startColumn": 1,
                                    "endColumn": 15
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0309",
                    "level": "warning",
                    "message": {
                        "text": "Section variable '${DOB_MonthData}' name should be uppercase"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestData/CreateAnAccountData.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 6,
                                    "endLine": 6,
                                    "startColumn": 1,
                                    "endColumn": 17
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "1001",
                    "level": "warning",
                    "message": {
                        "text": "Trailing whitespace at the end of line"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestData/CreateAnAccountData.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 6,
                                    "endLine": 6,
                                    "startColumn": 29,
                                    "endColumn": 29
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0309",
                    "level": "warning",
                    "message": {
                        "text": "Section variable '${DOB_YearData}' name should be uppercase"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestData/CreateAnAccountData.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 7,
                                    "endLine": 7,
                                    "startColumn": 1,
                                    "endColumn": 16
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0309",
                    "level": "warning",
                    "message": {
                        "text": "Section variable '${CompanyData}' name should be uppercase"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestData/CreateAnAccountData.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 8,
                                    "endLine": 8,
                                    "startColumn": 1,
                                    "endColumn": 15
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0309",
                    "level": "warning",
                    "message": {
                        "text": "Section variable '${AddressData}' name should be uppercase"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestData/CreateAnAccountData.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 9,
                                    "endLine": 9,
                                    "startColumn": 1,
                                    "endColumn": 15
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0309",
                    "level": "warning",
                    "message": {
                        "text": "Section variable '${Address2Data}' name should be uppercase"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestData/CreateAnAccountData.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 10,
                                    "endLine": 10,
                                    "startColumn": 1,
                                    "endColumn": 16
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0309",
                    "level": "warning",
                    "message": {
                        "text": "Section variable '${CityData}' name should be uppercase"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestData/CreateAnAccountData.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 11,
                                    "endLine": 11,
                                    "startColumn": 1,
                                    "endColumn": 12
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0309",
                    "level": "warning",
                    "message": {
                        "text": "Section variable '${StateData}' name should be uppercase"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestData/CreateAnAccountData.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 12,
                                    "endLine": 12,
                                    "startColumn": 1,
                                    "endColumn": 13
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0309",
                    "level": "warning",
                    "message": {
                        "text": "Section variable '${ZipCodeData}' name should be uppercase"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestData/CreateAnAccountData.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 13,
                                    "endLine": 13,
                                    "startColumn": 1,
                                    "endColumn": 15
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0309",
                    "level": "warning",
                    "message": {
                        "text": "Section variable '${AdditionalInformationData}' name should be uppercase"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestData/CreateAnAccountData.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 14,
                                    "endLine": 14,
                                    "startColumn": 1,
                                    "endColumn": 29
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0309",
                    "level": "warning",
                    "message": {
                        "text": "Section variable '${HomePhoneData}' name should be uppercase"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestData/CreateAnAccountData.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 15,
                                    "endLine": 15,
                                    "startColumn": 1,
                                    "endColumn": 17
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0309",
                    "level": "warning",
                    "message": {
                        "text": "Section variable '${MobilePhoneData}' name should be uppercase"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestData/CreateAnAccountData.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 16,
                                    "endLine": 16,
                                    "startColumn": 1,
                                    "endColumn": 19
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0309",
                    "level": "warning",
                    "message": {
                        "text": "Section variable '${AssignAnAddressAliasData}' name should be uppercase"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestData/CreateAnAccountData.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 17,
                                    "endLine": 17,
                                    "startColumn": 1,
                                    "endColumn": 28
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0203",
                    "level": "warning",
                    "message": {
                        "text": "Missing documentation in suite"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestData/SearchData.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 1,
                                    "endLine": 1,
                                    "startColumn": 1,
                                    "endColumn": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0913",
                    "level": "note",
                    "message": {
                        "text": "No tests in 'SearchData.robot' file, consider renaming to 'SearchData.resource'"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestData/SearchData.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 1,
                                    "endLine": 1,
                                    "startColumn": 1,
                                    "endColumn": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0309",
                    "level": "warning",
                    "message": {
                        "text": "Section variable '${SearchKeyword}' name should be uppercase"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestData/SearchData.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 2,
                                    "endLine": 2,
                                    "startColumn": 1,
                                    "endColumn": 17
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "1002",
                    "level": "warning",
                    "message": {
                        "text": "Missing trailing blank line at the end of file"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestData/SearchData.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 2,
                                    "endLine": 2,
                                    "startColumn": 1,
                                    "endColumn": 35
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0203",
                    "level": "warning",
                    "message": {
                        "text": "Missing documentation in suite"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestData/TestConfig.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 1,
                                    "endLine": 1,
                                    "startColumn": 1,
                                    "endColumn": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0913",
                    "level": "note",
                    "message": {
                        "text": "No tests in 'TestConfig.robot' file, consider renaming to 'TestConfig.resource'"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestData/TestConfig.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 1,
                                    "endLine": 1,
                                    "startColumn": 1,
                                    "endColumn": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0309",
                    "level": "warning",
                    "message": {
                        "text": "Section variable '${AppURL}' name should be uppercase"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestData/TestConfig.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 2,
                                    "endLine": 2,
                                    "startColumn": 1,
                                    "endColumn": 10
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0309",
                    "level": "warning",
                    "message": {
                        "text": "Section variable '${Browser}' name should be uppercase"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestData/TestConfig.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 3,
                                    "endLine": 3,
                                    "startColumn": 1,
                                    "endColumn": 11
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0203",
                    "level": "warning",
                    "message": {
                        "text": "Missing documentation in suite"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestSuite/CreateAnAccountTest.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 1,
                                    "endLine": 1,
                                    "startColumn": 1,
                                    "endColumn": 24
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0605",
                    "level": "note",
                    "message": {
                        "text": "All tests in suite share these tags: 'allure.label.epic:Account Creation, allure.label.suite:Essential Features, allure.label.subSuite:Authentication, allure.label.parentSuite:Web Interface'. You can define them in 'Test Tags' in suite settings instead"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestSuite/CreateAnAccountTest.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 1,
                                    "endLine": 1,
                                    "startColumn": 1,
                                    "endColumn": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "1003",
                    "level": "warning",
                    "message": {
                        "text": "Invalid number of empty lines between sections (0/2)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestSuite/CreateAnAccountTest.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 10,
                                    "endLine": 10,
                                    "startColumn": 1,
                                    "endColumn": 24
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0911",
                    "level": "warning",
                    "message": {
                        "text": "BuiltIn library import 'BuiltIn' should be placed before 'SeleniumLibrary'"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestSuite/CreateAnAccountTest.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 10,
                                    "endLine": 10,
                                    "startColumn": 17,
                                    "endColumn": 24
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "1003",
                    "level": "warning",
                    "message": {
                        "text": "Invalid number of empty lines between sections (1/2)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestSuite/CreateAnAccountTest.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 14,
                                    "endLine": 14,
                                    "startColumn": 1,
                                    "endColumn": 23
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "1009",
                    "level": "warning",
                    "message": {
                        "text": "Too many empty lines after '*** Test Cases ***' section header (2/0)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestSuite/CreateAnAccountTest.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 15,
                                    "endLine": 15,
                                    "startColumn": 1,
                                    "endColumn": 19
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0601",
                    "level": "warning",
                    "message": {
                        "text": "Tag 'allure.label.parentSuite:Web Interface' should not contain spaces"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestSuite/CreateAnAccountTest.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 19,
                                    "endLine": 19,
                                    "startColumn": 15,
                                    "endColumn": 53
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0601",
                    "level": "warning",
                    "message": {
                        "text": "Tag 'allure.label.suite:Essential Features' should not contain spaces"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestSuite/CreateAnAccountTest.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 20,
                                    "endLine": 20,
                                    "startColumn": 15,
                                    "endColumn": 52
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0601",
                    "level": "warning",
                    "message": {
                        "text": "Tag 'allure.label.epic:Account Creation' should not contain spaces"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestSuite/CreateAnAccountTest.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 22,
                                    "endLine": 22,
                                    "startColumn": 15,
                                    "endColumn": 49
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0601",
                    "level": "warning",
                    "message": {
                        "text": "Tag 'allure.label.feature:Valid Account Creation' should not contain spaces"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestSuite/CreateAnAccountTest.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 23,
                                    "endLine": 23,
                                    "startColumn": 15,
                                    "endColumn": 58
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0927",
                    "level": "warning",
                    "message": {
                        "text": "'DOCUMENTATION' is in wrong place of Test Case. Recommended order of elements in Test Cases: DOCUMENTATION, TAGS, TIMEOUT, SETUP, TEMPLATE, KEYWORD, TEARDOWN"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestSuite/CreateAnAccountTest.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 24,
                                    "endLine": 24,
                                    "startColumn": 1,
                                    "endColumn": 85
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0601",
                    "level": "warning",
                    "message": {
                        "text": "Tag 'allure.label.parentSuite:Web Interface' should not contain spaces"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestSuite/CreateAnAccountTest.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 32,
                                    "endLine": 32,
                                    "startColumn": 15,
                                    "endColumn": 53
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0601",
                    "level": "warning",
                    "message": {
                        "text": "Tag 'allure.label.suite:Essential Features' should not contain spaces"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestSuite/CreateAnAccountTest.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 33,
                                    "endLine": 33,
                                    "startColumn": 15,
                                    "endColumn": 52
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0601",
                    "level": "warning",
                    "message": {
                        "text": "Tag 'allure.label.epic:Account Creation' should not contain spaces"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestSuite/CreateAnAccountTest.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 35,
                                    "endLine": 35,
                                    "startColumn": 15,
                                    "endColumn": 49
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0601",
                    "level": "warning",
                    "message": {
                        "text": "Tag 'allure.label.feature:Invalid Account Creation' should not contain spaces"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestSuite/CreateAnAccountTest.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 36,
                                    "endLine": 36,
                                    "startColumn": 15,
                                    "endColumn": 60
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0927",
                    "level": "warning",
                    "message": {
                        "text": "'DOCUMENTATION' is in wrong place of Test Case. Recommended order of elements in Test Cases: DOCUMENTATION, TAGS, TIMEOUT, SETUP, TEMPLATE, KEYWORD, TEARDOWN"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestSuite/CreateAnAccountTest.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 37,
                                    "endLine": 37,
                                    "startColumn": 1,
                                    "endColumn": 103
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "1003",
                    "level": "warning",
                    "message": {
                        "text": "Invalid number of empty lines between sections (1/2)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestSuite/CreateAnAccountTest.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 44,
                                    "endLine": 44,
                                    "startColumn": 1,
                                    "endColumn": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0302",
                    "level": "warning",
                    "message": {
                        "text": "Keyword name 'Capture few' does not follow case convention"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestSuite/CreateAnAccountTest.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 60,
                                    "endLine": 60,
                                    "startColumn": 5,
                                    "endColumn": 16
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0201",
                    "level": "warning",
                    "message": {
                        "text": "Missing documentation in 'Capture few' keyword"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestSuite/CreateAnAccountTest.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 63,
                                    "endLine": 63,
                                    "startColumn": 1,
                                    "endColumn": 12
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0302",
                    "level": "warning",
                    "message": {
                        "text": "Keyword name 'Capture few' does not follow case convention"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestSuite/CreateAnAccountTest.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 63,
                                    "endLine": 63,
                                    "startColumn": 1,
                                    "endColumn": 12
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0201",
                    "level": "warning",
                    "message": {
                        "text": "Missing documentation in 'Enter Account Details' keyword"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestSuite/CreateAnAccountTest.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 80,
                                    "endLine": 80,
                                    "startColumn": 1,
                                    "endColumn": 22
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0201",
                    "level": "warning",
                    "message": {
                        "text": "Missing documentation in 'Submit Account Creation' keyword"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestSuite/CreateAnAccountTest.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 87,
                                    "endLine": 87,
                                    "startColumn": 1,
                                    "endColumn": 24
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0201",
                    "level": "warning",
                    "message": {
                        "text": "Missing documentation in 'Verify Error Message Is Displayed' keyword"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestSuite/CreateAnAccountTest.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 92,
                                    "endLine": 92,
                                    "startColumn": 1,
                                    "endColumn": 34
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0203",
                    "level": "warning",
                    "message": {
                        "text": "Missing documentation in suite"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestSuite/SearchTest.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 1,
                                    "endLine": 1,
                                    "startColumn": 1,
                                    "endColumn": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0519",
                    "level": "error",
                    "message": {
                        "text": "Suite Setup does not have any keywords"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestSuite/SearchTest.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 2,
                                    "endLine": 2,
                                    "startColumn": 1,
                                    "endColumn": 12
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0522",
                    "level": "error",
                    "message": {
                        "text": "Suite Teardown does not have any keywords"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestSuite/SearchTest.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 3,
                                    "endLine": 3,
                                    "startColumn": 1,
                                    "endColumn": 15
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "1003",
                    "level": "warning",
                    "message": {
                        "text": "Invalid number of empty lines between sections (1/2)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestSuite/SearchTest.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 6,
                                    "endLine": 6,
                                    "startColumn": 1,
                                    "endColumn": 51
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0203",
                    "level": "warning",
                    "message": {
                        "text": "Missing documentation in suite"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestSuite/SearchTest.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 7,
                                    "endLine": 7,
                                    "startColumn": 1,
                                    "endColumn": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0808",
                    "level": "warning",
                    "message": {
                        "text": "'*** Settings ***' section header already defined in file (first occurrence in line 1)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestSuite/SearchTest.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 7,
                                    "endLine": 7,
                                    "startColumn": 1,
                                    "endColumn": 17
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "1003",
                    "level": "warning",
                    "message": {
                        "text": "Invalid number of empty lines between sections (1/2)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestSuite/SearchTest.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 9,
                                    "endLine": 9,
                                    "startColumn": 1,
                                    "endColumn": 44
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0202",
                    "level": "warning",
                    "message": {
                        "text": "Missing documentation in 'SearchTestffeeg' test case"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestSuite/SearchTest.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 11,
                                    "endLine": 11,
                                    "startColumn": 1,
                                    "endColumn": 16
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0302",
                    "level": "warning",
                    "message": {
                        "text": "Keyword name 'Search a Keyword' does not follow case convention"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestSuite/SearchTest.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 13,
                                    "endLine": 13,
                                    "startColumn": 5,
                                    "endColumn": 21
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0302",
                    "level": "warning",
                    "message": {
                        "text": "Keyword name 'Verify Search Result Page is shown' does not follow case convention"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestSuite/SearchTest.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 14,
                                    "endLine": 14,
                                    "startColumn": 5,
                                    "endColumn": 39
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "0203",
                    "level": "warning",
                    "message": {
                        "text": "Missing documentation in suite"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "TestSuite/__init__.robot",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 1,
                                    "endLine": 1,
                                    "startColumn": 1,
                                    "endColumn": 1
                                }
                            }
                        }
                    ]
                }
            ]
        }
    ]
}